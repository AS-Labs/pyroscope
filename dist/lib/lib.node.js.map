{"version":3,"sources":["webpack://pyroscope/./node_modules/color-convert/conversions.js","webpack://pyroscope/./node_modules/color-convert/index.js","webpack://pyroscope/./node_modules/color-convert/node_modules/color-name/index.js","webpack://pyroscope/./node_modules/color-convert/route.js","webpack://pyroscope/./node_modules/color-name/index.js","webpack://pyroscope/./node_modules/color-string/index.js","webpack://pyroscope/./node_modules/color/index.js","webpack://pyroscope/./node_modules/simple-swizzle/index.js","webpack://pyroscope/./node_modules/simple-swizzle/node_modules/is-arrayish/index.js","webpack://pyroscope/webpack/bootstrap","webpack://pyroscope/webpack/runtime/compat get default export","webpack://pyroscope/webpack/runtime/define property getters","webpack://pyroscope/webpack/runtime/hasOwnProperty shorthand","webpack://pyroscope/webpack/runtime/make namespace object","webpack://pyroscope/./webapp/javascript/util/unit.ts","webpack://pyroscope/./webapp/javascript/util/private/utils.ts","webpack://pyroscope/./webapp/javascript/util/toolbelt.ts","webpack://pyroscope/./webapp/javascript/util/result.ts","webpack://pyroscope/./webapp/javascript/util/maybe.ts","webpack://pyroscope/./webapp/javascript/util/fp.ts","webpack://pyroscope/./webapp/javascript/components/FlameGraph/FlameGraphComponent/constants.ts","webpack://pyroscope/./webapp/javascript/util/flamebearer.ts","webpack://pyroscope/./webapp/javascript/util/format.ts","webpack://pyroscope/./webapp/javascript/util/fitMode.ts","webpack://pyroscope/./webapp/javascript/components/FlameGraph/FlameGraphComponent/utils.ts","webpack://pyroscope/./node_modules/d3-array/src/ticks.js","webpack://pyroscope/./node_modules/d3-array/src/ascending.js","webpack://pyroscope/./node_modules/d3-array/src/bisector.js","webpack://pyroscope/./node_modules/d3-array/src/number.js","webpack://pyroscope/./node_modules/d3-array/src/bisect.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-color/src/define.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-color/src/color.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-interpolate/src/basis.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-interpolate/src/basisClosed.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-interpolate/src/constant.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-interpolate/src/color.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-interpolate/src/rgb.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-interpolate/src/array.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-interpolate/src/date.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-interpolate/src/number.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-interpolate/src/object.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-interpolate/src/string.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-interpolate/src/numberArray.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-interpolate/src/value.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-interpolate/src/round.js","webpack://pyroscope/./node_modules/d3-scale/src/constant.js","webpack://pyroscope/./node_modules/d3-scale/src/number.js","webpack://pyroscope/./node_modules/d3-scale/src/continuous.js","webpack://pyroscope/./node_modules/d3-scale/src/init.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-format/src/formatSpecifier.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-format/src/formatDecimal.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-format/src/exponent.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-format/src/precisionPrefix.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-format/src/formatGroup.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-format/src/formatNumerals.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-format/src/formatTrim.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-format/src/formatPrefixAuto.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-format/src/formatRounded.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-format/src/formatTypes.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-format/src/identity.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-format/src/locale.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-format/src/defaultLocale.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-format/src/precisionRound.js","webpack://pyroscope/./node_modules/d3-scale/node_modules/d3-format/src/precisionFixed.js","webpack://pyroscope/./node_modules/d3-scale/src/tickFormat.js","webpack://pyroscope/./node_modules/d3-scale/src/linear.js","webpack://pyroscope/./webapp/javascript/util/murmur3.ts","webpack://pyroscope/./webapp/javascript/components/FlameGraph/FlameGraphComponent/color.ts","webpack://pyroscope/./webapp/javascript/components/FlameGraph/FlameGraphComponent/Flamegraph_render.ts","webpack://pyroscope/./webapp/javascript/components/FlameGraph/FlameGraphComponent/Flamegraph.ts","webpack://pyroscope/./webapp/javascript/components/FlameGraph/FlameGraphComponent/colorPalette.ts"],"names":[],"mappings":"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","file":"lib.node.js","sourcesContent":["/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\nvar hasOwnProperty = Object.hasOwnProperty;\n\nvar reverseNames = {};\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (hasOwnProperty.call(colorNames, name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar keyword = /^(\\w+)$/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\tif (!hasOwnProperty.call(colorNames, match[1])) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = Math.round(num).toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n","'use strict';\n\nvar colorString = require('color-string');\nvar convert = require('color-convert');\n\nvar _slice = [].slice;\n\nvar skippedModels = [\n\t// to be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// shouldn't really be in color-convert either...\n\t'hex'\n];\n\nvar hashedModelKeys = {};\nObject.keys(convert).forEach(function (model) {\n\thashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;\n});\n\nvar limiters = {};\n\nfunction Color(obj, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tvar i;\n\tvar channels;\n\n\tif (obj == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (obj instanceof Color) {\n\t\tthis.model = obj.model;\n\t\tthis.color = obj.color.slice();\n\t\tthis.valpha = obj.valpha;\n\t} else if (typeof obj === 'string') {\n\t\tvar result = colorString.get(obj);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + obj);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (obj.length) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tvar newArr = _slice.call(obj, 0, channels);\n\t\tthis.color = zeroArray(newArr, channels);\n\t\tthis.valpha = typeof obj[channels] === 'number' ? obj[channels] : 1;\n\t} else if (typeof obj === 'number') {\n\t\t// this is always RGB - can be converted later on.\n\t\tobj &= 0xFFFFFF;\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(obj >> 16) & 0xFF,\n\t\t\t(obj >> 8) & 0xFF,\n\t\t\tobj & 0xFF\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tvar keys = Object.keys(obj);\n\t\tif ('alpha' in obj) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof obj.alpha === 'number' ? obj.alpha : 0;\n\t\t}\n\n\t\tvar hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(obj));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tvar labels = convert[this.model].labels;\n\t\tvar color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(obj[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tvar limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString: function () {\n\t\treturn this.string();\n\t},\n\n\ttoJSON: function () {\n\t\treturn this[this.model]();\n\t},\n\n\tstring: function (places) {\n\t\tvar self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString: function (places) {\n\t\tvar self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray: function () {\n\t\treturn this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);\n\t},\n\n\tobject: function () {\n\t\tvar result = {};\n\t\tvar channels = convert[this.model].channels;\n\t\tvar labels = convert[this.model].labels;\n\n\t\tfor (var i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray: function () {\n\t\tvar rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject: function () {\n\t\tvar rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround: function (places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);\n\t},\n\n\talpha: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(this.color.concat(Math.max(0, Math.min(1, val))), this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, function (val) { return ((val % 360) + 360) % 360; }), // eslint-disable-line brace-style\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(100)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(100)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.rgb().color;\n\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.rgb().color;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight: function () {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = this.rgb();\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\t\treturn rgb;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale: function () {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar rgb = this.rgb().color;\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(val, val, val);\n\t},\n\n\tfade: function (ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer: function (ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.hsl();\n\t\tvar hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix: function (mixinColor, weight) {\n\t\t// ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\t\tvar color1 = mixinColor.rgb();\n\t\tvar color2 = this.rgb();\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t}\n};\n\n// model conversion methods and static constructors\nObject.keys(convert).forEach(function (model) {\n\tif (skippedModels.indexOf(model) !== -1) {\n\t\treturn;\n\t}\n\n\tvar channels = convert[model].channels;\n\n\t// conversion methods\n\tColor.prototype[model] = function () {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (arguments.length) {\n\t\t\treturn new Color(arguments, model);\n\t\t}\n\n\t\tvar newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;\n\t\treturn new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (color) {\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(_slice.call(arguments), channels);\n\t\t}\n\t\treturn new Color(color, model);\n\t};\n});\n\nfunction roundTo(num, places) {\n\treturn Number(num.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (num) {\n\t\treturn roundTo(num, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tmodel.forEach(function (m) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t});\n\n\tmodel = model[0];\n\n\treturn function (val) {\n\t\tvar result;\n\n\t\tif (arguments.length) {\n\t\t\tif (modifier) {\n\t\t\t\tval = modifier(val);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = val;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(val) {\n\treturn Array.isArray(val) ? val : [val];\n}\n\nfunction zeroArray(arr, length) {\n\tfor (var i = 0; i < length; i++) {\n\t\tif (typeof arr[i] !== 'number') {\n\t\t\tarr[i] = 0;\n\t\t}\n\t}\n\n\treturn arr;\n}\n\nmodule.exports = Color;\n","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n","module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n  Provide a type which is effectively a type-safe, non-interchangeable empty\n  object to use instead of `null` or `undefined`.\n\n  @module\n */\n\nconst TagSymbol = Symbol('BrandTag');\n\n/**\n * Create a unique, nominalish type.\n * @internal\n */\nclass Brand<Tag extends string> {\n  protected readonly [TagSymbol]: Tag;\n\n  constructor(tag: Tag) {\n    this[TagSymbol] = tag;\n  }\n}\n\n/**\n  The `Unit` type exists for the cases where you want a type-safe equivalent of\n  `undefined` or `null`. It's a concrete instance, which won't blow up on you,\n  and you can safely use it with e.g. {@linkcode result.Result Result} without\n  being concerned that you'll accidentally introduce `null` or `undefined` back\n  into your application.\n\n  Equivalent to `()` or \"unit\" in many functional or functional-influenced\n  languages.\n */\nexport const Unit = new Brand('unit');\nexport type Unit = typeof Unit;\nexport default Unit;\n","/**\n  @module\n  @internal\n*/\n\n/**\n * Check if the value here is an all-consuming monstrosity which will consume\n * everything in its transdimensional rage. A.k.a. `null` or `undefined`.\n *\n * @internal\n */\nexport const isVoid = (value: unknown): value is undefined | null =>\n  typeof value === 'undefined' || value === null;\n\n/** @internal */\nexport function curry1<T, U>(op: (t: T) => U, item?: T) {\n  return item !== undefined ? op(item) : op;\n}\n","import Result from './result';\nimport Maybe from './maybe';\nimport { curry1 } from './private/utils';\n\n/**\n  Transposes a {@linkcode Result} of a {@linkcode Maybe} into a `Maybe` of a\n  `Result`.\n\n  | Input         | Output         |\n  | ------------- | -------------- |\n  | `Ok(Just(T))` | `Just(Ok(T))`  |\n  | `Err(E)`      | `Just(Err(E))` |\n  | `Ok(Nothing)` | `Nothing`      |\n\n  @param result a `Result<Maybe<T>, E>` to transform to a `Maybe<Result<T, E>>`.\n */\nexport function transposeResult<T, E>(\n  result: Result<Maybe<T>, E>\n): Maybe<Result<T, E>> {\n  return result.match({\n    Ok: (maybe) =>\n      maybe.match({\n        Just: (v) => Maybe.just(Result.ok(v)),\n        Nothing: () => Maybe.nothing(),\n      }),\n    Err: (e) => Maybe.just(Result.err<T, E>(e)),\n  });\n}\n\n/**\n  Convert a {@linkcode Result} to a {@linkcode Maybe.Maybe Maybe}.\n\n  The converted type will be {@linkcode Maybe.Just Just} if the `Result` is\n  {@linkcode Ok} or {@linkcode Maybe.Nothing Nothing} if the `Result` is\n  {@linkcode Err}; the wrapped error value will be discarded.\n\n  @param result The `Result` to convert to a `Maybe`\n  @returns      `Just` the value in `result` if it is `Ok`; otherwise `Nothing`\n */\nexport function toMaybe<T>(result: Result<T, unknown>): Maybe<T> {\n  return result.isOk ? Maybe.just(result.value) : Maybe.nothing();\n}\n\n/**\n  Transform a {@linkcode Maybe.Maybe Maybe} into a {@linkcode Result}.\n\n  If the `Maybe` is a {@linkcode Maybe.Just Just}, its value will be wrapped in\n  the {@linkcode Ok} variant; if it is a {@linkcode Maybe.Nothing Nothing} the\n  `errValue` will be wrapped in the {@linkcode Err} variant.\n\n  @param errValue A value to wrap in an `Err` if `maybe` is a `Nothing`.\n  @param maybe    The `Maybe` to convert to a `Result`.\n */\nexport function fromMaybe<T, E>(errValue: E, maybe: Maybe<T>): Result<T, E>;\nexport function fromMaybe<T, E>(errValue: E): (maybe: Maybe<T>) => Result<T, E>;\nexport function fromMaybe<T, E>(\n  errValue: E,\n  maybe?: Maybe<T>\n): Result<T, E> | ((maybe: Maybe<T>) => Result<T, E>) {\n  const op = (m: Maybe<T>) =>\n    m.isJust ? Result.ok<T, E>(m.value) : Result.err<T, E>(errValue);\n  return curry1(op, maybe);\n}\n\n/**\n  Transposes a {@linkcode Maybe} of a {@linkcode Result} into a `Result` of a\n  `Maybe`.\n\n  | Input          | Output        |\n  | -------------- | ------------- |\n  | `Just(Ok(T))`  | `Ok(Just(T))` |\n  | `Just(Err(E))` | `Err(E)`      |\n  | `Nothing`      | `Ok(Nothing)` |\n\n  @param maybe a `Maybe<Result<T, E>>` to transform to a `Result<Maybe<T>, E>>`.\n */\nexport function transposeMaybe<T, E>(\n  maybe: Maybe<Result<T, E>>\n): Result<Maybe<T>, E> {\n  // SAFETY: TS is unable to unify this expression throughout without explicitly\n  // casting at the end: it thinks that the `T` and `E` values here may be\n  // nullable and so may end up with `Unit` instead of one or the other. Alas,\n  // there is no way around this: `extends NonNullable<_>` doesn't actually do\n  // anything here. However, we can see that this will actually always hold,\n  // because it's impossible to get here without having *already* filled in the\n  // fully-resolved type for `T` or `E`: if it's `Unit`, it is `Unit` by the\n  // time this function is called.\n  return maybe.match({\n    Just: (result) =>\n      result.match({\n        Ok: (v) => Result.ok(Maybe.just(v)),\n        Err: (e) => Result.err(e),\n      }),\n    Nothing: () => Result.ok(Maybe.nothing()),\n  }) as Result<Maybe<T>, E>;\n}\n\n/**\n  Transform the {@linkcode Maybe} into a {@linkcode Result.Result Result}, using\n  the wrapped value as the {@linkcode Result.Ok Ok} value if {@linkcode Just};\n  otherwise using the supplied `error` value for {@linkcode Result.Err Err}.\n\n  @typeparam T  The wrapped value.\n  @typeparam E  The error type to in the `Result`.\n  @param error The error value to use if the `Maybe` is `Nothing`.\n  @param maybe The `Maybe` instance to convert.\n  @returns     A `Result` containing the value wrapped in `maybe` in an `Ok`, or\n               `error` in an `Err`.\n */\nexport function toOkOrErr<T, E>(error: E, maybe: Maybe<T>): Result<T, E>;\nexport function toOkOrErr<T, E>(error: E): (maybe: Maybe<T>) => Result<T, E>;\nexport function toOkOrErr<T, E>(\n  error: E,\n  maybe?: Maybe<T>\n): Result<T, E> | ((maybe: Maybe<T>) => Result<T, E>) {\n  const op = (m: Maybe<T>) =>\n    m.isJust ? Result.ok<T, E>(m.value) : Result.err<T, E>(error);\n  return maybe !== undefined ? op(maybe) : op;\n}\n\n/**\n  Transform the {@linkcode Maybe} into a {@linkcode Result.Result Result}, using\n  the wrapped value as the {@linkcode Result.Ok Ok} value if {@linkcode Just};\n  otherwise using `elseFn` to generate {@linkcode Result.Err Err}.\n\n  @typeparam T  The wrapped value.\n  @typeparam E  The error type to in the `Result`.\n  @param elseFn The function which generates an error of type `E`.\n  @param maybe  The `Maybe` instance to convert.\n  @returns     A `Result` containing the value wrapped in `maybe` in an `Ok`, or\n               the value generated by `elseFn` in an `Err`.\n */\nexport function toOkOrElseErr<T, E>(\n  elseFn: () => E,\n  maybe: Maybe<T>\n): Result<T, E>;\nexport function toOkOrElseErr<T, E>(\n  elseFn: () => E\n): (maybe: Maybe<T>) => Result<T, E>;\nexport function toOkOrElseErr<T, E>(\n  elseFn: () => E,\n  maybe?: Maybe<T>\n): Result<T, E> | ((maybe: Maybe<T>) => Result<T, E>) {\n  const op = (m: Maybe<T>) =>\n    m.isJust ? Result.ok<T, E>(m.value) : Result.err<T, E>(elseFn());\n  return curry1(op, maybe);\n}\n\n/**\n  Construct a {@linkcode Maybe Maybe<T>} from a\n  {@linkcode Result.Result Result<T, E>}.\n\n  If the `Result` is an {@linkcode Result.Ok Ok}, wrap its value in\n  {@linkcode Just}. If the `Result` is an {@linkcode Result.Err Err}, throw away\n  the wrapped `E` and transform to a {@linkcode Nothing}.\n\n  @typeparam T  The type of the value wrapped in a `Result.Ok` and in the `Just`\n                of the resulting `Maybe`.\n  @param result The `Result` to construct a `Maybe` from.\n  @returns      `Just` if `result` was `Ok` or `Nothing` if it was `Err`.\n */\nexport function fromResult<T>(result: Result<T, unknown>): Maybe<T> {\n  return result.isOk ? Maybe.just(result.value) : Maybe.nothing<T>();\n}\n","/**\n  [[include:doc/result.md]]\n  \n  @module\n */\n\nimport type Maybe from './maybe';\n\nimport Unit from './unit';\nimport { curry1, isVoid } from './private/utils';\n\n// Import for backwards-compatibility re-export\nimport * as Toolbelt from './toolbelt';\n\n/**\n  Discriminant for {@linkcode Ok} and {@linkcode Err} variants of the\n  {@linkcode Result} type.\n\n  You can use the discriminant via the `variant` property of `Result` instances\n  if you need to match explicitly on it.\n */\nexport const Variant = {\n  Ok: 'Ok',\n  Err: 'Err',\n} as const;\n\nexport type Variant = keyof typeof Variant;\n\nexport interface OkJSON<T> {\n  variant: 'Ok';\n  value: T;\n}\n\nexport interface ErrJSON<E> {\n  variant: 'Err';\n  error: E;\n}\n\nexport type ResultJSON<T, E> = OkJSON<T> | ErrJSON<E>;\n\ntype Repr<T, E> = [tag: 'Ok', value: T] | [tag: 'Err', error: E];\n\n// Defines the *implementation*, but not the *types*. See the exports below.\nclass ResultImpl<T, E> {\n  private constructor(private repr: Repr<T, E>) {}\n\n  /**\n    Create an instance of {@linkcode Ok}.\n\n    Note: While you *may* create the {@linkcode Result} type via normal\n    JavaScript class construction, it is not recommended for the functional\n    style for which the library is intended. Instead, use {@linkcode ok}.\n\n    ```ts\n    // Avoid:\n    const aString = new Result.Ok('characters');\n\n    // Prefer:\n    const aString = Result.ok('characters);\n    ```\n\n    Note that you may explicitly pass {@linkcode Unit.Unit Unit} to the\n    {@linkcode Ok} constructor to create a `Result<Unit, E>`. However, you may\n    *not* call the `Ok` constructor with `null` or `undefined` to get that\n    result (the type system won't allow you to construct it that way). Instead,\n    for convenience, you can simply call {@linkcode ok}, which will construct\n    the type correctly.\n\n    @param value The value to wrap in an `Ok`.\n   */\n  static ok<T, E>(): Result<Unit, E>;\n  static ok<T, E>(value: T): Result<T, E>;\n  static ok<T, E>(value?: T): Result<Unit, E> | Result<T, E> {\n    return isVoid(value)\n      ? (new ResultImpl<Unit, E>(['Ok', Unit]) as Result<Unit, E>)\n      : (new ResultImpl<T, E>(['Ok', value]) as Result<T, E>);\n  }\n\n  /**\n    Create an instance of {@linkcode Err}.\n\n    Note: While you *may* create the {@linkcode Result} type via normal\n    JavaScript class construction, it is not recommended for the functional\n    style for which the library is intended. Instead, use {@linkcode err}.\n\n    ```ts\n    // Avoid:\n    const anErr = new Result.Err('alas, failure');\n\n    // Prefer:\n    const anErr = Result.err('alas, failure');\n    ```\n\n    @param error The value to wrap in an `Err`.\n   */\n  static err<T, E>(): Result<T, Unit>;\n  static err<T, E>(error: E): Result<T, E>;\n  static err<T, E>(error?: E): Result<T, Unit> | Result<T, E> {\n    return isVoid(error)\n      ? (new ResultImpl<T, Unit>(['Err', Unit]) as Result<T, Unit>)\n      : (new ResultImpl<T, E>(['Err', error]) as Result<T, E>);\n  }\n\n  /** Distinguish between the {@linkcode Variant.Ok} and {@linkcode Variant.Err} {@linkcode Variant variants}. */\n  get variant(): Variant {\n    return this.repr[0];\n  }\n\n  /**\n    The wrapped value.\n\n    @throws if you access when the {@linkcode Result} is not {@linkcode Ok}\n   */\n  get value(): T | never {\n    if (this.repr[0] === Variant.Err) {\n      throw new Error('Cannot get the value of Err');\n    }\n\n    return this.repr[1];\n  }\n\n  /**\n    The wrapped error value.\n\n    @throws if you access when the {@linkcode Result} is not {@linkcode Err}\n   */\n  get error(): E | never {\n    if (this.repr[0] === Variant.Ok) {\n      throw new Error('Cannot get the error of Ok');\n    }\n\n    return this.repr[1];\n  }\n\n  /** Is the {@linkcode Result} an {@linkcode Ok}? */\n  get isOk() {\n    return this.repr[0] === Variant.Ok;\n  }\n\n  /** Is the `Result` an `Err`? */\n  get isErr() {\n    return this.repr[0] === Variant.Err;\n  }\n\n  /** Method variant for {@linkcode map} */\n  map<U>(this: Result<T, E>, mapFn: (t: T) => U): Result<U, E> {\n    return map(mapFn, this);\n  }\n\n  /** Method variant for {@linkcode mapOr} */\n  mapOr<U>(this: Result<T, E>, orU: U, mapFn: (t: T) => U): U {\n    return mapOr(orU, mapFn, this);\n  }\n\n  /** Method variant for {@linkcode mapOrElse} */\n  mapOrElse<U>(\n    this: Result<T, E>,\n    orElseFn: (err: E) => U,\n    mapFn: (t: T) => U\n  ): U {\n    return mapOrElse(orElseFn, mapFn, this);\n  }\n\n  /** Method variant for {@linkcode match} */\n  match<U>(this: Result<T, E>, matcher: Matcher<T, E, U>): U {\n    return match(matcher, this);\n  }\n\n  /** Method variant for {@linkcode mapErr} */\n  mapErr<F>(this: Result<T, E>, mapErrFn: (e: E) => F): Result<T, F> {\n    return mapErr(mapErrFn, this);\n  }\n\n  /** Method variant for {@linkcode or} */\n  or<F>(this: Result<T, E>, orResult: Result<T, F>): Result<T, F> {\n    return or(orResult, this);\n  }\n\n  /** Method variant for {@linkcode orElse} */\n  orElse<F>(\n    this: Result<T, E>,\n    orElseFn: (err: E) => Result<T, F>\n  ): Result<T, F> {\n    return orElse(orElseFn, this);\n  }\n\n  /** Method variant for {@linkcode and} */\n  and<U>(this: Result<T, E>, mAnd: Result<U, E>): Result<U, E> {\n    return and(mAnd, this);\n  }\n\n  /** Method variant for {@linkcode andThen} */\n  andThen<U>(\n    this: Result<T, E>,\n    andThenFn: (t: T) => Result<U, E>\n  ): Result<U, E> {\n    return andThen(andThenFn, this);\n  }\n\n  /** Method variant for {@linkcode unwrapOr} */\n  unwrapOr<U = T>(this: Result<T, E>, defaultValue: U): T | U {\n    return unwrapOr(defaultValue, this);\n  }\n\n  /** Method variant for {@linkcode unwrapOrElse} */\n  unwrapOrElse<U>(this: Result<T, E>, elseFn: (error: E) => U): T | U {\n    return unwrapOrElse(elseFn, this);\n  }\n\n  /**\n    Method variant for {@linkcode Toolbelt.toMaybe toMaybe} from\n    {@linkcode Toolbelt}. Prefer to import and use it directly instead:\n\n    ```ts\n    import { toMaybe } from 'true-myth/toolbelt';\n    ```\n\n    @deprecated until 6.0\n   */\n  toMaybe(this: Result<T, E>): Maybe<T> {\n    return Toolbelt.toMaybe(this);\n  }\n\n  /** Method variant for {@linkcode toString} */\n  toString(this: Result<T, E>): string {\n    return toString(this);\n  }\n\n  /** Method variant for {@linkcode toJSON} */\n  toJSON(this: Result<T, E>): ResultJSON<T, E> {\n    return toJSON(this);\n  }\n\n  /** Method variant for {@linkcode equals} */\n  equals(this: Result<T, E>, comparison: Result<T, E>): boolean {\n    return equals(comparison, this);\n  }\n\n  /** Method variant for {@linkcode ap} */\n  ap<A, B>(this: Result<(a: A) => B, E>, r: Result<A, E>): Result<B, E> {\n    return ap(this, r);\n  }\n}\n\n/**\n  An `Ok` instance is the *successful* variant instance of the\n  {@linkcode Result} type, representing a successful outcome from an operation\n  which may fail. For a full discussion, see the module docs.\n\n  @typeparam T The type wrapped in this `Ok` variant of `Result`.\n  @typeparam E The type which would be wrapped in an `Err` variant of `Result`.\n */\nexport interface Ok<T, E> extends ResultImpl<T, E> {\n  /** `Ok` is always [`Variant.Ok`](../enums/_result_.variant#ok). */\n  variant: 'Ok';\n  isOk: true;\n  isErr: false;\n  /** The wrapped value */\n  value: T;\n  /** @internal */\n  error: never;\n}\n\n/**\n  An `Err` instance is the *failure* variant instance of the {@linkcode Result}\n  type, representing a failure outcome from an operation which may fail. For a\n  full discussion, see the module docs.\n\n  @typeparam T The type which would be wrapped in an `Ok` variant of `Result`.\n  @typeparam E The type wrapped in this `Err` variant of `Result`.\n  */\nexport interface Err<T, E> extends ResultImpl<T, E> {\n  /** `Err` is always [`Variant.Err`](../enums/_result_.variant#err). */\n  readonly variant: 'Err';\n  isOk: false;\n  isErr: true;\n  /** @internal */\n  value: never;\n  /** The wrapped error value. */\n  error: E;\n}\n\n/**\n  Execute the provided callback, wrapping the return value in {@linkcode Ok} or\n  {@linkcode Err Err(error)} if there is an exception.\n\n  ```ts\n  const aSuccessfulOperation = () => 2 + 2;\n\n  const anOkResult = Result.tryOr('Oh noes!!1', () => {\n    aSuccessfulOperation()\n  }); // => Ok(4)\n\n  const thisOperationThrows = () => throw new Error('Bummer');\n\n  const anErrResult = Result.tryOr('Oh noes!!1', () => {\n    thisOperationThrows();\n  }); // => Err('Oh noes!!1')\n ```\n\n  @param error The error value in case of an exception\n  @param callback The callback to try executing\n */\nexport function tryOr<T, E>(error: E, callback: () => T): Result<T, E>;\nexport function tryOr<T, E>(error: E): (callback: () => T) => Result<T, E>;\nexport function tryOr<T, E>(\n  error: E,\n  callback?: () => T\n): Result<T, E> | ((callback: () => T) => Result<T, E>) {\n  const op = (cb: () => T) => {\n    try {\n      return ok<T, E>(cb());\n    } catch {\n      return err<T, E>(error);\n    }\n  };\n\n  return curry1(op, callback);\n}\n\n/**\n  Create an instance of {@linkcode Ok}.\n\n  If you need to create an instance with a specific type (as you do whenever you\n  are not constructing immediately for a function return or as an argument to a\n  function), you can use a type parameter:\n\n  ```ts\n  const yayNumber = Result.ok<number, string>(12);\n  ```\n\n  Note: passing nothing, or passing `null` or `undefined` explicitly, will\n  produce a `Result<Unit, E>`, rather than producing the nonsensical and in\n  practice quite annoying `Result<null, string>` etc. See {@linkcode Unit} for\n  more.\n\n  ```ts\n  const normalResult = Result.ok<number, string>(42);\n  const explicitUnit = Result.ok<Unit, string>(Unit);\n  const implicitUnit = Result.ok<Unit, string>();\n  ```\n\n  In the context of an immediate function return, or an arrow function with a\n  single expression value, you do not have to specify the types, so this can be\n  quite convenient.\n\n  ```ts\n  type SomeData = {\n    //...\n  };\n\n  const isValid = (data: SomeData): boolean => {\n    // true or false...\n  }\n\n  const arrowValidate = (data: SomeData): Result<Unit, string> =>\n    isValid(data) ? Result.ok() : Result.err('something was wrong!');\n\n  function fnValidate(data: someData): Result<Unit, string> {\n    return isValid(data) ? Result.ok() : Result.err('something was wrong');\n  }\n  ```\n\n  @typeparam T The type of the item contained in the `Result`.\n  @param value The value to wrap in a `Result.Ok`.\n */\nexport const ok = ResultImpl.ok;\n\n/**\n  Create an instance of {@linkcode Err}.\n\n  If you need to create an instance with a specific type (as you do whenever you\n  are not constructing immediately for a function return or as an argument to a\n  function), you can use a type parameter:\n\n  ```ts\n  const notString = Result.err<number, string>('something went wrong');\n  ```\n\n  Note: passing nothing, or passing `null` or `undefined` explicitly, will\n  produce a `Result<T, Unit>`, rather than producing the nonsensical and in\n  practice quite annoying `Result<null, string>` etc. See {@linkcode Unit} for\n  more.\n\n  ```ts\n  const normalResult = Result.err<number, string>('oh no');\n  const explicitUnit = Result.err<number, Unit>(Unit);\n  const implicitUnit = Result.err<number, Unit>();\n  ```\n\n  In the context of an immediate function return, or an arrow function with a\n  single expression value, you do not have to specify the types, so this can be\n  quite convenient.\n\n  ```ts\n  type SomeData = {\n    //...\n  };\n\n  const isValid = (data: SomeData): boolean => {\n    // true or false...\n  }\n\n  const arrowValidate = (data: SomeData): Result<number, Unit> =>\n    isValid(data) ? Result.ok(42) : Result.err();\n\n  function fnValidate(data: someData): Result<number, Unit> {\n    return isValid(data) ? Result.ok(42) : Result.err();\n  }\n  ```\n\n  @typeparam T The type of the item contained in the `Result`.\n  @param E The error value to wrap in a `Result.Err`.\n */\nexport const err = ResultImpl.err;\n\n/**\n  Execute the provided callback, wrapping the return value in {@linkcode Ok}.\n  If there is an exception, return a {@linkcode Err} of whatever the `onError`\n  function returns.\n\n  ```ts\n  const aSuccessfulOperation = () => 2 + 2;\n\n  const anOkResult = Result.tryOrElse(\n    (e) => e,\n    aSuccessfulOperation\n  ); // => Ok(4)\n\n  const thisOperationThrows = () => throw 'Bummer'\n\n  const anErrResult = Result.tryOrElse((e) => e, () => {\n    thisOperationThrows();\n  }); // => Err('Bummer')\n ```\n\n  @param onError A function that takes `e` exception and returns what will\n    be wrapped in a `Result.Err`\n  @param callback The callback to try executing\n */\nexport function tryOrElse<T, E>(\n  onError: (e: unknown) => E,\n  callback: () => T\n): Result<T, E>;\nexport function tryOrElse<T, E>(\n  onError: (e: unknown) => E\n): (callback: () => T) => Result<T, E>;\nexport function tryOrElse<T, E>(\n  onError: (e: unknown) => E,\n  callback?: () => T\n): Result<T, E> | ((callback: () => T) => Result<T, E>) {\n  const op = (cb: () => T) => {\n    try {\n      return ok<T, E>(cb());\n    } catch (e) {\n      return err<T, E>(onError(e));\n    }\n  };\n\n  return curry1(op, callback);\n}\n\n/**\n  Map over a {@linkcode Result} instance: apply the function to the wrapped\n  value if the instance is {@linkcode Ok}, and return the wrapped error value\n  wrapped as a new {@linkcode Err} of the correct type (`Result<U, E>`) if the\n  instance is `Err`.\n\n  `map` works a lot like `Array.prototype.map`, but with one important\n  difference. Both `Result` and `Array` are containers for other kinds of items,\n  but where `Array.prototype.map` has 0 to _n_ items, a `Result` always has\n  exactly one item, which is *either* a success or an error instance.\n\n  Where `Array.prototype.map` will apply the mapping function to every item in\n  the array (if there are any), `Result.map` will only apply the mapping\n  function to the (single) element if an `Ok` instance, if there is one.\n\n  If you have no items in an array of numbers named `foo` and call `foo.map(x =>\n  x + 1)`, you'll still some have an array with nothing in it. But if you have\n  any items in the array (`[2, 3]`), and you call `foo.map(x => x + 1)` on it,\n  you'll get a new array with each of those items inside the array \"container\"\n  transformed (`[3, 4]`).\n\n  With this `map`, the `Err` variant is treated *by the `map` function* kind of\n  the same way as the empty array case: it's just ignored, and you get back a\n  new `Result` that is still just the same `Err` instance. But if you have an\n  `Ok` variant, the map function is applied to it, and you get back a new\n  `Result` with the value transformed, and still wrapped in an `Ok`.\n\n  #### Examples\n\n  ```ts\n  import { ok, err, map, toString } from 'true-myth/result';\n  const double = n => n * 2;\n\n  const anOk = ok(12);\n  const mappedOk = map(double, anOk);\n  console.log(toString(mappedOk)); // Ok(24)\n\n  const anErr = err(\"nothing here!\");\n  const mappedErr = map(double, anErr);\n  console.log(toString(mappedOk)); // Err(nothing here!)\n  ```\n\n  @typeparam T  The type of the value wrapped in an `Ok` instance, and taken as\n                the argument to the `mapFn`.\n  @typeparam U  The type of the value wrapped in the new `Ok` instance after\n                applying `mapFn`, that is, the type returned by `mapFn`.\n  @typeparam E  The type of the value wrapped in an `Err` instance.\n  @param mapFn  The function to apply the value to if `result` is `Ok`.\n  @param result The `Result` instance to map over.\n  @returns      A new `Result` with the result of applying `mapFn` to the value\n                in an `Ok`, or else the original `Err` value wrapped in the new\n                instance.\n */\nexport function map<T, U, E>(\n  mapFn: (t: T) => U,\n  result: Result<T, E>\n): Result<U, E>;\nexport function map<T, U, E>(\n  mapFn: (t: T) => U\n): (result: Result<T, E>) => Result<U, E>;\nexport function map<T, U, E>(\n  mapFn: (t: T) => U,\n  result?: Result<T, E>\n): Result<U, E> | ((result: Result<T, E>) => Result<U, E>) {\n  const op = (r: Result<T, E>) =>\n    (r.isOk ? ok(mapFn(r.value)) : r) as Result<U, E>;\n  return curry1(op, result);\n}\n\n/**\n  Map over a {@linkcode Result} instance as in [`map`](#map) and get out the\n  value if `result` is an {@linkcode Ok}, or return a default value if `result`\n  is an {@linkcode Err}.\n\n  #### Examples\n\n  ```ts\n  import { ok, err, mapOr } from 'true-myth/result';\n\n  const length = (s: string) => s.length;\n\n  const anOkString = ok('a string');\n  const theStringLength = mapOr(0, anOkString);\n  console.log(theStringLength);  // 8\n\n  const anErr = err('uh oh');\n  const anErrMapped = mapOr(0, anErr);\n  console.log(anErrMapped);  // 0\n  ```\n\n  @param orU The default value to use if `result` is an `Err`.\n  @param mapFn The function to apply the value to if `result` is an `Ok`.\n  @param result The `Result` instance to map over.\n */\nexport function mapOr<T, U, E>(\n  orU: U,\n  mapFn: (t: T) => U,\n  result: Result<T, E>\n): U;\nexport function mapOr<T, U, E>(\n  orU: U,\n  mapFn: (t: T) => U\n): (result: Result<T, E>) => U;\nexport function mapOr<T, U, E>(\n  orU: U\n): (mapFn: (t: T) => U) => (result: Result<T, E>) => U;\nexport function mapOr<T, U, E>(\n  orU: U,\n  mapFn?: (t: T) => U,\n  result?: Result<T, E>\n):\n  | U\n  | ((result: Result<T, E>) => U)\n  | ((mapFn: (t: T) => U) => (result: Result<T, E>) => U) {\n  function fullOp(fn: (t: T) => U, r: Result<T, E>): U {\n    return r.isOk ? fn(r.value) : orU;\n  }\n\n  function partialOp(fn: (t: T) => U): (maybe: Result<T, E>) => U;\n  function partialOp(fn: (t: T) => U, curriedResult: Result<T, E>): U;\n  function partialOp(\n    fn: (t: T) => U,\n    curriedResult?: Result<T, E>\n  ): U | ((maybe: Result<T, E>) => U) {\n    return curriedResult !== undefined\n      ? fullOp(fn, curriedResult)\n      : (extraCurriedResult: Result<T, E>) => fullOp(fn, extraCurriedResult);\n  }\n\n  return mapFn === undefined\n    ? partialOp\n    : result === undefined\n    ? partialOp(mapFn)\n    : partialOp(mapFn, result);\n}\n\n/**\n  Map over a {@linkcode Result} instance as in {@linkcode map} and get out the\n  value if `result` is {@linkcode Ok}, or apply a function (`orElseFn`) to the\n  value wrapped in the {@linkcode Err} to get a default value.\n\n  Like {@linkcode mapOr} but using a function to transform the error into a\n  usable value instead of simply using a default value.\n\n  #### Examples\n\n  ```ts\n  import { ok, err, mapOrElse } from 'true-myth/result';\n\n  const summarize = (s: string) => `The response was: '${s}'`;\n  const getReason = (err: { code: number, reason: string }) => err.reason;\n\n  const okResponse = ok(\"Things are grand here.\");\n  const mappedOkAndUnwrapped = mapOrElse(getReason, summarize, okResponse);\n  console.log(mappedOkAndUnwrapped);  // The response was: 'Things are grand here.'\n\n  const errResponse = err({ code: 500, reason: 'Nothing at this endpoint!' });\n  const mappedErrAndUnwrapped = mapOrElse(getReason, summarize, errResponse);\n  console.log(mappedErrAndUnwrapped);  // Nothing at this endpoint!\n  ```\n\n  @typeparam T    The type of the wrapped `Ok` value.\n  @typeparam U    The type of the resulting value from applying `mapFn` to the\n                  `Ok` value or `orElseFn` to the `Err` value.\n  @typeparam E    The type of the wrapped `Err` value.\n  @param orElseFn The function to apply to the wrapped `Err` value to get a\n                  usable value if `result` is an `Err`.\n  @param mapFn    The function to apply to the wrapped `Ok` value if `result` is\n                  an `Ok`.\n  @param result   The `Result` instance to map over.\n */\nexport function mapOrElse<T, U, E>(\n  orElseFn: (err: E) => U,\n  mapFn: (t: T) => U,\n  result: Result<T, E>\n): U;\nexport function mapOrElse<T, U, E>(\n  orElseFn: (err: E) => U,\n  mapFn: (t: T) => U\n): (result: Result<T, E>) => U;\nexport function mapOrElse<T, U, E>(\n  orElseFn: (err: E) => U\n): (mapFn: (t: T) => U) => (result: Result<T, E>) => U;\nexport function mapOrElse<T, U, E>(\n  orElseFn: (err: E) => U,\n  mapFn?: (t: T) => U,\n  result?: Result<T, E>\n):\n  | U\n  | ((result: Result<T, E>) => U)\n  | ((mapFn: (t: T) => U) => (result: Result<T, E>) => U) {\n  function fullOp(fn: (t: T) => U, r: Result<T, E>) {\n    return r.isOk ? fn(r.value) : orElseFn(r.error);\n  }\n\n  function partialOp(fn: (t: T) => U): (maybe: Result<T, E>) => U;\n  function partialOp(fn: (t: T) => U, curriedResult: Result<T, E>): U;\n  function partialOp(\n    fn: (t: T) => U,\n    curriedResult?: Result<T, E>\n  ): U | ((maybe: Result<T, E>) => U) {\n    return curriedResult !== undefined\n      ? fullOp(fn, curriedResult)\n      : (extraCurriedResult: Result<T, E>) => fullOp(fn, extraCurriedResult);\n  }\n\n  return mapFn === undefined\n    ? partialOp\n    : result === undefined\n    ? partialOp(mapFn)\n    : partialOp(mapFn, result);\n}\n\n/**\n  Map over a {@linkcode Ok}, exactly as in {@linkcode map}, but operating on the\n  value wrapped in an {@linkcode Err} instead of the value wrapped in the\n  {@linkcode Ok}. This is handy for when you need to line up a bunch of\n  different types of errors, or if you need an error of one shape to be in a\n  different shape to use somewhere else in your codebase.\n\n  #### Examples\n\n  ```ts\n  import { ok, err, mapErr, toString } from 'true-myth/result';\n\n  const reason = (err: { code: number, reason: string }) => err.reason;\n\n  const anOk = ok(12);\n  const mappedOk = mapErr(reason, anOk);\n  console.log(toString(mappedOk));  // Ok(12)\n\n  const anErr = err({ code: 101, reason: 'bad file' });\n  const mappedErr = mapErr(reason, anErr);\n  console.log(toString(mappedErr));  // Err(bad file)\n  ```\n\n  @typeparam T    The type of the value wrapped in the `Ok` of the `Result`.\n  @typeparam E    The type of the value wrapped in the `Err` of the `Result`.\n  @typeparam F    The type of the value wrapped in the `Err` of a new `Result`,\n                  returned by the `mapErrFn`.\n  @param mapErrFn The function to apply to the value wrapped in `Err` if\n  `result` is an `Err`.\n  @param result   The `Result` instance to map over an error case for.\n */\nexport function mapErr<T, E, F>(\n  mapErrFn: (e: E) => F,\n  result: Result<T, E>\n): Result<T, F>;\nexport function mapErr<T, E, F>(\n  mapErrFn: (e: E) => F\n): (result: Result<T, E>) => Result<T, F>;\nexport function mapErr<T, E, F>(\n  mapErrFn: (e: E) => F,\n  result?: Result<T, E>\n): Result<T, F> | ((result: Result<T, E>) => Result<T, F>) {\n  const op = (r: Result<T, E>) =>\n    (r.isOk ? r : err(mapErrFn(r.error))) as Result<T, F>;\n  return curry1(op, result);\n}\n\n/**\n  You can think of this like a short-circuiting logical \"and\" operation on a\n  {@linkcode Result} type. If `result` is {@linkcode Ok}, then the result is the\n  `andResult`. If `result` is {@linkcode Err}, the result is the `Err`.\n\n  This is useful when you have another `Result` value you want to provide if and\n  *only if* you have an `Ok` – that is, when you need to make sure that if you\n  `Err`, whatever else you're handing a `Result` to *also* gets that `Err`.\n\n  Notice that, unlike in [`map`](#map) or its variants, the original `result` is\n  not involved in constructing the new `Result`.\n\n  #### Examples\n\n  ```ts\n  import { and, ok, err, toString } from 'true-myth/result';\n\n  const okA = ok('A');\n  const okB = ok('B');\n  const anErr = err({ so: 'bad' });\n\n  console.log(toString(and(okB, okA)));  // Ok(B)\n  console.log(toString(and(okB, anErr)));  // Err([object Object])\n  console.log(toString(and(anErr, okA)));  // Err([object Object])\n  console.log(toString(and(anErr, anErr)));  // Err([object Object])\n  ```\n\n  @typeparam T     The type of the value wrapped in the `Ok` of the `Result`.\n  @typeparam U     The type of the value wrapped in the `Ok` of the `andResult`,\n                   i.e. the success type of the `Result` present if the checked\n                   `Result` is `Ok`.\n  @typeparam E     The type of the value wrapped in the `Err` of the `Result`.\n  @param andResult The `Result` instance to return if `result` is `Err`.\n  @param result    The `Result` instance to check.\n */\nexport function and<T, U, E>(\n  andResult: Result<U, E>,\n  result: Result<T, E>\n): Result<U, E>;\nexport function and<T, U, E>(\n  andResult: Result<U, E>\n): (result: Result<T, E>) => Result<U, E>;\nexport function and<T, U, E>(\n  andResult: Result<U, E>,\n  result?: Result<T, E>\n): Result<U, E> | ((result: Result<T, E>) => Result<U, E>) {\n  const op = (r: Result<T, E>) => (r.isOk ? andResult : err<U, E>(r.error));\n  return curry1(op, result);\n}\n\n/**\n  Apply a function to the wrapped value if {@linkcode Ok} and return a new `Ok`\n  containing the resulting value; or if it is {@linkcode Err} return it\n  unmodified.\n\n  This differs from `map` in that `thenFn` returns another {@linkcode Result}.\n  You can use `andThen` to combine two functions which *both* create a `Result`\n  from an unwrapped type.\n\n  You may find the `.then` method on an ES6 `Promise` helpful for comparison: if\n  you have a `Promise`, you can pass its `then` method a callback which returns\n  another `Promise`, and the result will not be a *nested* promise, but a single\n  `Promise`. The difference is that `Promise#then` unwraps *all* layers to only\n  ever return a single `Promise` value, whereas `Result.andThen` will not unwrap\n  nested `Result`s.\n\n  This is is sometimes also known as `bind`, but *not* aliased as such because\n  [`bind` already means something in JavaScript][bind].\n\n  [bind]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\n\n  #### Examples\n\n  ```ts\n  import { ok, err, andThen, toString } from 'true-myth/result';\n\n  const toLengthAsResult = (s: string) => ok(s.length);\n\n  const anOk = ok('just a string');\n  const lengthAsResult = andThen(toLengthAsResult, anOk);\n  console.log(toString(lengthAsResult));  // Ok(13)\n\n  const anErr = err(['srsly', 'whatever']);\n  const notLengthAsResult = andThen(toLengthAsResult, anErr);\n  console.log(toString(notLengthAsResult));  // Err(srsly,whatever)\n  ```\n\n  @typeparam T   The type of the value wrapped in the `Ok` of the `Result`.\n  @typeparam U   The type of the value wrapped in the `Ok` of the `Result`\n                 returned by the `thenFn`.\n  @typeparam E   The type of the value wrapped in the `Err` of the `Result`.\n  @param thenFn  The function to apply to the wrapped `T` if `maybe` is `Just`.\n  @param result  The `Maybe` to evaluate and possibly apply a function to.\n */\nexport function andThen<T, U, E>(\n  thenFn: (t: T) => Result<U, E>,\n  result: Result<T, E>\n): Result<U, E>;\nexport function andThen<T, U, E>(\n  thenFn: (t: T) => Result<U, E>\n): (result: Result<T, E>) => Result<U, E>;\nexport function andThen<T, U, E>(\n  thenFn: (t: T) => Result<U, E>,\n  result?: Result<T, E>\n): Result<U, E> | ((result: Result<T, E>) => Result<U, E>) {\n  const op = (r: Result<T, E>) =>\n    r.isOk ? thenFn(r.value) : err<U, E>(r.error);\n  return curry1(op, result);\n}\n\n/**\n  Provide a fallback for a given {@linkcode Result}. Behaves like a logical\n  `or`: if the `result` value is an {@linkcode Ok}, returns that `result`;\n  otherwise, returns the `defaultResult` value.\n\n  This is useful when you want to make sure that something which takes a\n  `Result` always ends up getting an `Ok` variant, by supplying a default value\n  for the case that you currently have an {@linkcode Err}.\n\n  ```ts\n  import { ok, err, Result, or } from 'true-utils/result';\n\n  const okA = ok<string, string>('a');\n  const okB = ok<string, string>('b');\n  const anErr = err<string, string>(':wat:');\n  const anotherErr = err<string, string>(':headdesk:');\n\n  console.log(or(okB, okA).toString());  // Ok(A)\n  console.log(or(anErr, okA).toString());  // Ok(A)\n  console.log(or(okB, anErr).toString());  // Ok(B)\n  console.log(or(anotherErr, anErr).toString());  // Err(:headdesk:)\n  ```\n\n  @typeparam T          The type wrapped in the `Ok` case of `result`.\n  @typeparam E          The type wrapped in the `Err` case of `result`.\n  @typeparam F          The type wrapped in the `Err` case of `defaultResult`.\n  @param defaultResult  The `Result` to use if `result` is an `Err`.\n  @param result         The `Result` instance to check.\n  @returns              `result` if it is an `Ok`, otherwise `defaultResult`.\n */\nexport function or<T, E, F>(\n  defaultResult: Result<T, F>,\n  result: Result<T, E>\n): Result<T, F>;\nexport function or<T, E, F>(\n  defaultResult: Result<T, F>\n): (result: Result<T, E>) => Result<T, F>;\nexport function or<T, E, F>(\n  defaultResult: Result<T, F>,\n  result?: Result<T, E>\n): Result<T, F> | ((result: Result<T, E>) => Result<T, F>) {\n  const op = (r: Result<T, E>) => (r.isOk ? ok<T, F>(r.value) : defaultResult);\n  return curry1(op, result);\n}\n\n/**\n  Like {@linkcode or}, but using a function to construct the alternative\n  {@linkcode Result}.\n\n  Sometimes you need to perform an operation using other data in the environment\n  to construct the fallback value. In these situations, you can pass a function\n  (which may be a closure) as the `elseFn` to generate the fallback `Result<T>`.\n  It can then transform the data in the `Err` to something usable as an\n  {@linkcode Ok}, or generate a new {@linkcode Err} instance as appropriate.\n\n  Useful for transforming failures to usable data.\n\n  @param elseFn The function to apply to the contents of the `Err` if `result`\n                is an `Err`, to create a new `Result`.\n  @param result The `Result` to use if it is an `Ok`.\n  @returns      The `result` if it is `Ok`, or the `Result` returned by `elseFn`\n                if `result` is an `Err.\n */\nexport function orElse<T, E, F>(\n  elseFn: (err: E) => Result<T, F>,\n  result: Result<T, E>\n): Result<T, F>;\nexport function orElse<T, E, F>(\n  elseFn: (err: E) => Result<T, F>\n): (result: Result<T, E>) => Result<T, F>;\nexport function orElse<T, E, F>(\n  elseFn: (err: E) => Result<T, F>,\n  result?: Result<T, E>\n): Result<T, F> | ((result: Result<T, E>) => Result<T, F>) {\n  const op = (r: Result<T, E>) =>\n    r.isOk ? ok<T, F>(r.value) : elseFn(r.error);\n  return curry1(op, result);\n}\n\n/**\n  Safely get the value out of the {@linkcode Ok} variant of a {@linkcode Result}.\n\n  This is the recommended way to get a value out of a `Result` most of the time.\n\n  ```ts\n  import { ok, err, unwrapOr } from 'true-myth/result';\n\n  const anOk = ok<number, string>(12);\n  console.log(unwrapOr(0, anOk));  // 12\n\n  const anErr = err<number, string>('nooooo');\n  console.log(unwrapOr(0, anErr));  // 0\n  ```\n\n  @typeparam T        The value wrapped in the `Ok`.\n  @typeparam E        The value wrapped in the `Err`.\n  @param defaultValue The value to use if `result` is an `Err`.\n  @param result       The `Result` instance to unwrap if it is an `Ok`.\n  @returns            The content of `result` if it is an `Ok`, otherwise\n                      `defaultValue`.\n */\nexport function unwrapOr<T, U, E>(defaultValue: U, result: Result<T, E>): U | T;\nexport function unwrapOr<T, U, E>(\n  defaultValue: U\n): (result: Result<T, E>) => U | T;\nexport function unwrapOr<T, U, E>(\n  defaultValue: U,\n  result?: Result<T, E>\n): (T | U) | ((result: Result<T, E>) => T | U) {\n  const op = (r: Result<T, E>) => (r.isOk ? r.value : defaultValue);\n  return curry1(op, result);\n}\n\n/**\n  Safely get the value out of a {@linkcode Result} by returning the wrapped\n  value if it is {@linkcode Ok}, or by applying `orElseFn` to the value in the\n  {@linkcode Err}.\n\n  This is useful when you need to *generate* a value (e.g. by using current\n  values in the environment – whether preloaded or by local closure) instead of\n  having a single default value available (as in {@linkcode unwrapOr}).\n\n  ```ts\n  import { ok, err, unwrapOrElse } from 'true-myth/result';\n\n  // You can imagine that someOtherValue might be dynamic.\n  const someOtherValue = 2;\n  const handleErr = (errValue: string) => errValue.length + someOtherValue;\n\n  const anOk = ok<number, string>(42);\n  console.log(unwrapOrElse(handleErr, anOk));  // 42\n\n  const anErr = err<number, string>('oh teh noes');\n  console.log(unwrapOrElse(handleErr, anErr));  // 13\n  ```\n\n  @typeparam T    The value wrapped in the `Ok`.\n  @typeparam E    The value wrapped in the `Err`.\n  @param orElseFn A function applied to the value wrapped in `result` if it is\n                  an `Err`, to generate the final value.\n  @param result   The `result` to unwrap if it is an `Ok`.\n  @returns        The value wrapped in `result` if it is `Ok` or the value\n                  returned by `orElseFn` applied to the value in `Err`.\n */\nexport function unwrapOrElse<T, U, E>(\n  orElseFn: (error: E) => U,\n  result: Result<T, E>\n): T | U;\nexport function unwrapOrElse<T, U, E>(\n  orElseFn: (error: E) => U\n): (result: Result<T, E>) => T | U;\nexport function unwrapOrElse<T, U, E>(\n  orElseFn: (error: E) => U,\n  result?: Result<T, E>\n): (T | U) | ((result: Result<T, E>) => T | U) {\n  const op = (r: Result<T, E>) => (r.isOk ? r.value : orElseFn(r.error));\n  return curry1(op, result);\n}\n\n/**\n  Local implementation of {@linkcode Toolbelt.toOkOrErr toOkOrErr} from\n  {@linkcode Toolbelt} for backwards compatibility. Prefer to import it from\n  there instead:\n\n  ```ts\n  import type { toOkOrErr } from 'true-myth/toolbelt';\n  ```\n\n  @deprecated until 6.0\n */\nexport function fromMaybe<T, E>(errValue: E, maybe: Maybe<T>): Result<T, E>;\nexport function fromMaybe<T, E>(errValue: E): (maybe: Maybe<T>) => Result<T, E>;\nexport function fromMaybe<T, E>(\n  errValue: E,\n  maybe?: Maybe<T>\n): Result<T, E> | ((maybe: Maybe<T>) => Result<T, E>) {\n  const op = (m: Maybe<T>) =>\n    m.isJust ? ok<T, E>(m.value) : err<T, E>(errValue);\n  return curry1(op, maybe);\n}\n\n/**\n  Create a `String` representation of a {@linkcode Result} instance.\n\n  An {@linkcode Ok} instance will be `Ok(<representation of the value>)`, and an\n  {@linkcode Err} instance will be `Err(<representation of the error>)`, where\n  the representation of the value or error is simply the value or error's own\n  `toString` representation. For example:\n\n                call                |         output\n  --------------------------------- | ----------------------\n  `toString(ok(42))`                | `Ok(42)`\n  `toString(ok([1, 2, 3]))`         | `Ok(1,2,3)`\n  `toString(ok({ an: 'object' }))`  | `Ok([object Object])`n\n  `toString(err(42))`               | `Err(42)`\n  `toString(err([1, 2, 3]))`        | `Err(1,2,3)`\n  `toString(err({ an: 'object' }))` | `Err([object Object])`\n\n  @typeparam T The type of the wrapped value; its own `.toString` will be used\n               to print the interior contents of the `Just` variant.\n  @param maybe The value to convert to a string.\n  @returns     The string representation of the `Maybe`.\n */\nexport const toString = <\n  T extends { toString(): string },\n  E extends { toString(): string }\n>(\n  result: Result<T, E>\n): string => {\n  const body = (result.isOk ? result.value : result.error).toString();\n  return `${result.variant.toString()}(${body})`;\n};\n\n/**\n * Create an `Object` representation of a {@linkcode Result} instance.\n *\n * Useful for serialization. `JSON.stringify()` uses it.\n *\n * @param result  The value to convert to JSON\n * @returns       The JSON representation of the `Result`\n */\nexport const toJSON = <T, E>(result: Result<T, E>): ResultJSON<T, E> => {\n  return result.isOk\n    ? { variant: result.variant, value: result.value }\n    : { variant: result.variant, error: result.error };\n};\n\n/**\n  A lightweight object defining how to handle each variant of a\n  {@linkcode Result}.\n */\nexport type Matcher<T, E, A> = {\n  Ok: (value: T) => A;\n  Err: (error: E) => A;\n};\n\n/**\n  Performs the same basic functionality as {@linkcode unwrapOrElse}, but instead\n  of simply unwrapping the value if it is {@linkcode Ok} and applying a value to\n  generate the same default type if it is {@linkcode Err}, lets you supply\n  functions which may transform the wrapped type if it is `Ok` or get a default\n  value for `Err`.\n\n  This is kind of like a poor man's version of pattern matching, which\n  JavaScript currently lacks.\n\n  Instead of code like this:\n\n  ```ts\n  import Result, { isOk, match } from 'true-myth/result';\n\n  const logValue = (mightBeANumber: Result<number, string>) => {\n    console.log(\n      isOk(mightBeANumber)\n        ? unsafelyUnwrap(mightBeANumber).toString()\n        : `There was an error: ${unsafelyGetErr(mightBeANumber)}`\n    );\n  };\n  ```\n\n  ...we can write code like this:\n\n  ```ts\n  import Result, { match } from 'true-myth/result';\n\n  const logValue = (mightBeANumber: Result<number, string>) => {\n    const value = match(\n      {\n        Ok: n => n.toString(),\n        Err: e => `There was an error: ${e}`,\n      },\n      mightBeANumber\n    );\n    console.log(value);\n  };\n  ```\n\n  This is slightly longer to write, but clearer: the more complex the resulting\n  expression, the hairer it is to understand the ternary. Thus, this is\n  especially convenient for times when there is a complex result, e.g. when\n  rendering part of a React component inline in JSX/TSX.\n\n  @param matcher A lightweight object defining what to do in the case of each\n                 variant.\n  @param maybe   The `maybe` instance to check.\n */\nexport function match<T, E, A>(\n  matcher: Matcher<T, E, A>,\n  result: Result<T, E>\n): A;\nexport function match<T, E, A>(\n  matcher: Matcher<T, E, A>\n): (result: Result<T, E>) => A;\nexport function match<T, E, A>(\n  matcher: Matcher<T, E, A>,\n  result?: Result<T, E>\n): A | ((result: Result<T, E>) => A) {\n  const op = (r: Result<T, E>) => mapOrElse(matcher.Err, matcher.Ok, r);\n  return curry1(op, result);\n}\n\n/**\n  Allows quick triple-equal equality check between the values inside two\n  {@linkcode Result}s without having to unwrap them first.\n\n  ```ts\n  const a = Result.of(3)\n  const b = Result.of(3)\n  const c = Result.of(null)\n  const d = Result.nothing()\n\n  Result.equals(a, b) // true\n  Result.equals(a, c) // false\n  Result.equals(c, d) // true\n  ```\n\n  @param resultB A `maybe` to compare to.\n  @param resultA A `maybe` instance to check.\n */\nexport function equals<T, E>(\n  resultB: Result<T, E>,\n  resultA: Result<T, E>\n): boolean;\nexport function equals<T, E>(\n  resultB: Result<T, E>\n): (resultA: Result<T, E>) => boolean;\nexport function equals<T, E>(\n  resultB: Result<T, E>,\n  resultA?: Result<T, E>\n): boolean | ((a: Result<T, E>) => boolean) {\n  return resultA !== undefined\n    ? resultA.match({\n        Err: () => resultB.isErr,\n        Ok: (a) => resultB.isOk && resultB.value === a,\n      })\n    : (curriedResultA: Result<T, E>) =>\n        curriedResultA.match({\n          Err: () => resultB.isErr,\n          Ok: (a) => resultB.isOk && resultB.value === a,\n        });\n}\n\n/**\n  Allows you to *apply* (thus `ap`) a value to a function without having to take\n  either out of the context of their {@linkcode Result}s. This does mean that\n  the transforming function is itself within a `Result`, which can be hard to\n  grok at first but lets you do some very elegant things. For example, `ap`\n  allows you to do this (using the method form, since nesting `ap` calls is\n  awkward):\n\n  ```ts\n  import { ap, ok, err } from 'true-myth/result';\n\n  const one = ok<number, string>(1);\n  const five = ok<number, string>(5);\n  const whoops = err<number, string>('oh no');\n\n  const add = (a: number) => (b: number) => a + b;\n  const resultAdd = ok<typeof add, string>(add);\n\n  resultAdd.ap(one).ap(five); // Ok(6)\n  resultAdd.ap(one).ap(whoops); // Err('oh no')\n  resultAdd.ap(whoops).ap(five) // Err('oh no')\n  ```\n\n  Without `ap`, you'd need to do something like a nested `match`:\n\n  ```ts\n  import { ok, err } from 'true-myth/result';\n\n  const one = ok<number, string>(1);\n  const five = ok<number, string>(5);\n  const whoops = err<number, string>('oh no');\n\n  one.match({\n    Ok: n => five.match({\n      Ok: o => ok<number, string>(n + o),\n      Err: e => err<number, string>(e),\n    }),\n    Err: e  => err<number, string>(e),\n  }); // Ok(6)\n\n  one.match({\n    Ok: n => whoops.match({\n      Ok: o => ok<number, string>(n + o),\n      Err: e => err<number, string>(e),\n    }),\n    Err: e  => err<number, string>(e),\n  }); // Err('oh no')\n\n  whoops.match({\n    Ok: n => five.match({\n      Ok: o => ok(n + o),\n      Err: e => err(e),\n    }),\n    Err: e  => err(e),\n  }); // Err('oh no')\n  ```\n\n  And this kind of thing comes up quite often once you're using `Result` to\n  handle errors throughout your application.\n\n  For another example, imagine you need to compare the equality of two\n  ImmutableJS data structures, where a `===` comparison won't work. With `ap`,\n  that's as simple as this:\n\n  ```ts\n  import { ok } from 'true-myth/result';\n  import { is as immutableIs, Set } from 'immutable';\n\n  const is = (first: unknown) =>  (second: unknown) => \n    immutableIs(first, second);\n\n  const x = ok(Set.of(1, 2, 3));\n  const y = ok(Set.of(2, 3, 4));\n\n  ok(is).ap(x).ap(y); // Ok(false)\n  ```\n\n  Without `ap`, we're back to that gnarly nested `match`:\n\n  ```ts\n  import Result, { ok, err } from 'true-myth/result';\n  import { is, Set } from 'immutable';\n\n  const x = ok(Set.of(1, 2, 3));\n  const y = ok(Set.of(2, 3, 4));\n\n  x.match({\n    Ok: iX => y.match({\n      Ok: iY => Result.of(is(iX, iY)),\n      Err: (e) => ok(false),\n    })\n    Err: (e) => ok(false),\n  }); // Ok(false)\n  ```\n\n  In summary: anywhere you have two `Result` instances and need to perform an\n  operation that uses both of them, `ap` is your friend.\n\n  Two things to note, both regarding *currying*:\n\n  1.  All functions passed to `ap` must be curried. That is, they must be of the\n      form (for add) `(a: number) => (b: number) => a + b`, *not* the more usual\n      `(a: number, b: number) => a + b` you see in JavaScript more generally.\n\n      (Unfortunately, these do not currently work with lodash or Ramda's `curry`\n      helper functions. A future update to the type definitions may make that\n      work, but the intermediate types produced by those helpers and the more\n      general function types expected by this function do not currently align.)\n\n  2.  You will need to call `ap` as many times as there are arguments to the\n      function you're dealing with. So in the case of this `add3` function,\n      which has the \"arity\" (function argument count) of 3 (`a` and `b`), you'll\n      need to call `ap` twice: once for `a`, and once for `b`. To see why, let's\n      look at what the result in each phase is:\n\n      ```ts\n      const add3 = (a: number) => (b: number) => (c: number) => a + b + c;\n\n      const resultAdd = ok(add); // Ok((a: number) => (b: number) => (c: number) => a + b + c)\n      const resultAdd1 = resultAdd.ap(ok(1)); // Ok((b: number) => (c: number) => 1 + b + c)\n      const resultAdd1And2 = resultAdd1.ap(ok(2)) // Ok((c: number) => 1 + 2 + c)\n      const final = maybeAdd1.ap(ok(3)); // Ok(4)\n      ```\n\n      So for `toString`, which just takes a single argument, you would only need\n      to call `ap` once.\n\n      ```ts\n      const toStr = (v: { toString(): string }) => v.toString();\n      ok(toStr).ap(12); // Ok(\"12\")\n      ```\n\n  One other scenario which doesn't come up *quite* as often but is conceivable\n  is where you have something that may or may not actually construct a function\n  for handling a specific `Result` scenario. In that case, you can wrap the\n  possibly-present in `ap` and then wrap the values to apply to the function to\n  in `Result` themselves.\n\n  Because `Result` often requires you to type out the full type parameterization\n  on a regular basis, it's convenient to use TypeScript's `typeof` operator to\n  write out the type of a curried function. For example, if you had a function\n  that simply merged three strings, you might write it like this:\n\n  ```ts\n  import Result from 'true-myth/result';\n  import { curry } from 'lodash';\n\n  const merge3Strs = (a: string, b: string, c: string) => string;\n  const curriedMerge = curry(merge3Strs);\n\n  const fn = Result.ok<typeof curriedMerge, string>(curriedMerge);\n  ```\n\n  The alternative is writing out the full signature long-form:\n\n  ```ts\n  const fn = Result.ok<(a: string) => (b: string) => (c: string) => string, string>(curriedMerge);\n  ```\n\n  **Aside:** `ap` is not named `apply` because of the overlap with JavaScript's\n  existing [`apply`] function – and although strictly speaking, there isn't any\n  direct overlap (`Result.apply` and `Function.prototype.apply` don't intersect\n  at all) it's useful to have a different name to avoid implying that they're\n  the same.\n\n  [`apply`]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\n\n  @param resultFn result of a function from T to U\n  @param result result of a T to apply to `fn`\n */\nexport function ap<T, U, E>(\n  resultFn: Result<(t: T) => U, E>,\n  result: Result<T, E>\n): Result<U, E>;\nexport function ap<T, U, E>(\n  resultFn: Result<(t: T) => U, E>\n): (result: Result<T, E>) => Result<U, E>;\nexport function ap<T, U, E>(\n  resultFn: Result<(val: T) => U, E>,\n  result?: Result<T, E>\n): Result<U, E> | ((val: Result<T, E>) => Result<U, E>) {\n  const op = (r: Result<T, E>) =>\n    r.andThen((val) => resultFn.map((fn) => fn(val)));\n  return curry1(op, result);\n}\n\n/**\n  Determine whether an item is an instance of {@linkcode Result}.\n\n  @param item The item to check.\n */\nexport function isInstance<T, E>(item: unknown): item is Result<T, E> {\n  return item instanceof ResultImpl;\n}\n\n/**\n  Re-export of {@linkcode Toolbelt.transposeMaybe transposeMaybe} from\n  {@linkcode Toolbelt} for backwards compatibility.Prefer to import it from\n  there instead:\n\n  ```ts\n  import type { transposeMaybe } from 'true-myth/toolbelt';\n  ```\n\n  @deprecated until 6.0\n */\nexport function transposeMaybe<T, E>(maybe: Maybe<Result<T, E>>) {\n  return Toolbelt.transposeMaybe(maybe);\n}\n\n/**\n  Re-export of {@linkcode Toolbelt.toMaybe toMaybe} from\n  {@linkcode Toolbelt} for backwards compatibility.Prefer to import it from\n  there instead:\n\n  ```ts\n  import type { toMaybe } from 'true-myth/toolbelt';\n  ```\n\n  @deprecated until 6.0\n */\nexport function toMaybe<T, E>(result: Result<T, E>): Maybe<T> {\n  return Toolbelt.toMaybe(result);\n}\n\n// The public interface for the {@linkcode Result} class *as a value*: a constructor and the\n// single associated static property.\nexport interface ResultConstructor {\n  ok: typeof ResultImpl.ok;\n  err: typeof ResultImpl.err;\n}\n\n/**\n  A value which may ({@linkcode Ok}) or may not ({@linkcode Err}) be present.\n\n  The behavior of this type is checked by TypeScript at compile time, and bears\n  no runtime overhead other than the very small cost of the container object.\n */\nexport type Result<T, E> = Ok<T, E> | Err<T, E>;\nexport const Result = ResultImpl as ResultConstructor;\nexport default Result;\n","/**\n  [[include:doc/maybe.md]]\n\n  @module\n */\n\nimport Result from './result';\nimport { curry1, isVoid } from './private/utils';\n\n// Import for backwards-compatibility re-export\nimport * as Toolbelt from './toolbelt';\n\n/**\n  Discriminant for the {@linkcode Just} and {@linkcode Nothing} type instances.\n\n  You can use the discriminant via the `variant` property of {@linkcode Maybe}¿\n  instances if you need to match explicitly on it.\n */\nexport const Variant = {\n  Just: 'Just',\n  Nothing: 'Nothing',\n} as const;\n\nexport type Variant = keyof typeof Variant;\n\nexport interface JustJSON<T> {\n  variant: 'Just';\n  value: T;\n}\n\nexport interface NothingJSON {\n  variant: 'Nothing';\n}\n\nexport type MaybeJSON<T> = JustJSON<T> | NothingJSON;\n\ntype Repr<T> = [tag: 'Just', value: T] | [tag: 'Nothing'];\n\n/**\n  A single instance of the `Nothing` object, to minimize memory usage. No matter\n  how many `Maybe`s are floating around, there will always be exactly and only\n  one `Nothing`.\n\n  @private\n */\n// SAFETY: `any` is required here because the whole point is that we're going to\n// use this *everywhere* there is a `Nothing`, so that there is effectively no\n// overhead of having a `Nothing` in your system: there is only ever once\n// instance of it.\nlet NOTHING: Nothing<any>;\n\n// Defines the *implementation*, but not the *types*. See the exports below.\nclass MaybeImpl<T> {\n  private repr: Repr<T>;\n\n  constructor(value?: T | null | undefined) {\n    if (isVoid(value)) {\n      // SAFETY: there is only a single `Nothing` in the system, because the\n      // only difference between `Nothing<string>` and `Nothing<number>` is at\n      // the type-checking level.\n      this.repr = [Variant.Nothing];\n      if (!NOTHING) {\n        NOTHING = this as Maybe<any> as Nothing<any>;\n      }\n\n      return NOTHING as Maybe<any> as this;\n    } else {\n      this.repr = [Variant.Just, value];\n    }\n  }\n\n  /**\n    Create a `Maybe` from any value.\n\n    To specify that the result should be interpreted as a specific type, you may\n    invoke `Maybe.of` with an explicit type parameter:\n\n    ```ts\n    const foo = Maybe.of<string>(null);\n    ```\n\n    This is usually only important in two cases:\n\n    1.  If you are intentionally constructing a `Nothing` from a known `null` or\n        undefined value *which is untyped*.\n    2.  If you are specifying that the type is more general than the value passed\n        (since TypeScript can define types as literals).\n\n    @typeparam T The type of the item contained in the `Maybe`.\n    @param value The value to wrap in a `Maybe`. If it is `undefined` or `null`,\n                the result will be `Nothing`; otherwise it will be the type of\n                the value passed.\n  */\n  static of<T>(value: T | null | undefined): Maybe<T> {\n    return new MaybeImpl(value) as Maybe<T>;\n  }\n\n  /**\n    Create an instance of `Maybe.Just`.\n\n    `null` and `undefined` are allowed by the type signature so that the\n    function may `throw` on those rather than constructing a type like\n    `Maybe<undefined>`.\n\n    @typeparam T The type of the item contained in the `Maybe`.\n    @param value The value to wrap in a `Maybe.Just`.\n    @returns     An instance of `Maybe.Just<T>`.\n    @throws      If you pass `null` or `undefined`.\n   */\n  static just<T>(value?: T | null): Maybe<T> {\n    if (isVoid(value)) {\n      throw new Error(`attempted to call \"just\" with ${value}`);\n    }\n\n    return new MaybeImpl<T>(value) as Maybe<T>;\n  }\n\n  /**\n    Create an instance of `Maybe.Nothing`.\n\n    If you want to create an instance with a specific type, e.g. for use in a\n    function which expects a `Maybe<T>` where the `<T>` is known but you have no\n    value to give it, you can use a type parameter:\n\n    ```ts\n    const notString = Maybe.nothing<string>();\n    ```\n\n    @typeparam T The type of the item contained in the `Maybe`.\n    @returns     An instance of `Maybe.Nothing<T>`.\n   */\n  static nothing<T>(_?: null): Nothing<T> {\n    return new MaybeImpl() as Nothing<T>;\n  }\n\n  /** Distinguish between the `Just` and `Nothing` {@link Variant variants}. */\n  get variant(): Variant {\n    return this.repr[0];\n  }\n\n  /**\n    The wrapped value.\n\n    @warning throws if you access this from a {@linkcode Just}\n   */\n  get value(): T {\n    if (this.repr[0] === Variant.Nothing) {\n      throw new Error('Cannot get the value of `Nothing`');\n    }\n\n    return this.repr[1];\n  }\n\n  /** Is the {@linkcode Maybe} a {@linkcode Just}? */\n  get isJust(): boolean {\n    return this.repr[0] === Variant.Just;\n  }\n\n  /** Is the {@linkcode Maybe} a {@linkcode Nothing}? */\n  get isNothing(): boolean {\n    return this.repr[0] === Variant.Nothing;\n  }\n\n  /** Method variant for {@linkcode map} */\n  map<U>(this: Maybe<T>, mapFn: (t: T) => U): Maybe<U> {\n    return map(mapFn, this);\n  }\n\n  /** Method variant for {@link mapOr|`mapOr`} */\n  mapOr<U>(this: Maybe<T>, orU: U, mapFn: (t: T) => U): U {\n    return mapOr(orU, mapFn, this);\n  }\n\n  /** Method variant for {@linkcode mapOrElse} */\n  mapOrElse<U>(this: Maybe<T>, orElseFn: () => U, mapFn: (t: T) => U): U {\n    return mapOrElse(orElseFn, mapFn, this);\n  }\n\n  /** Method variant for {@linkcode match} */\n  match<U>(this: Maybe<T>, matcher: Matcher<T, U>): U {\n    return match(matcher, this);\n  }\n\n  /** Method variant for {@linkcode or} */\n  or(this: Maybe<T>, mOr: Maybe<T>): Maybe<T> {\n    return or(mOr, this);\n  }\n\n  /** Method variant for {@linkcode orElse} */\n  orElse(this: Maybe<T>, orElseFn: () => Maybe<T>): Maybe<T> {\n    return orElse(orElseFn, this);\n  }\n\n  /** Method variant for {@linkcode and} */\n  and<U>(this: Maybe<T>, mAnd: Maybe<U>): Maybe<U> {\n    return and(mAnd, this);\n  }\n\n  /** Method variant for {@linkcode andThen} */\n  andThen<U>(this: Maybe<T>, andThenFn: (t: T) => Maybe<U>): Maybe<U> {\n    return andThen(andThenFn, this);\n  }\n\n  /** Method variant for {@linkcode unwrapOr} */\n  unwrapOr<U>(this: Maybe<T>, defaultValue: U): T | U {\n    return unwrapOr(defaultValue, this);\n  }\n\n  /** Method variant for {@linkcode unwrapOrElse} */\n  unwrapOrElse<U>(this: Maybe<T>, elseFn: () => U): T | U {\n    return unwrapOrElse(elseFn, this);\n  }\n\n  /**\n    Method variant for {@linkcode Toolbelt.toOkOrErr toOkOrErr} from\n    {@linkcode Toolbelt}. Prefer to import and use it directly instead:\n\n    ```ts\n    import { toOkOrErr } from 'true-myth/toolbelt';\n    ```\n\n    @deprecated until 6.0\n   */\n  toOkOrErr<E>(this: Maybe<T>, error: E): Result<T, E> {\n    return Toolbelt.toOkOrErr(error, this);\n  }\n\n  /**\n    Method variant for {@linkcode Toolbelt.toOkOrElseErr toOkOrElseErr} from\n    {@linkcode Toolbelt}. Prefer to import and use it directly instead:\n\n    ```ts\n    import { toOkOrElseErr } from 'true-myth/toolbelt';\n    ```\n\n    @deprecated until 6.0\n   */\n  toOkOrElseErr<E>(this: Maybe<T>, elseFn: () => E): Result<T, E> {\n    return Toolbelt.toOkOrElseErr(elseFn, this);\n  }\n\n  /** Method variant for {@linkcode toString} */\n  toString(this: Maybe<T>): string {\n    return toString(this);\n  }\n\n  /** Method variant for {@linkcode toJSON} */\n  toJSON(this: Maybe<T>): MaybeJSON<unknown> {\n    return toJSON(this);\n  }\n\n  /** Method variant for {@linkcode equals} */\n  equals(this: Maybe<T>, comparison: Maybe<T>): boolean {\n    return equals(comparison, this);\n  }\n\n  /** Method variant for {@linkcode ap} */\n  ap<A, B>(this: Maybe<(val: A) => B>, val: Maybe<A>): Maybe<B> {\n    return ap(this, val);\n  }\n\n  /**\n    Method variant for {@linkcode get}\n\n    If you have a `Maybe` of an object type, you can do `thatMaybe.get('a key')`\n    to look up the next layer down in the object.\n\n    ```ts\n    type DeepOptionalType = {\n      something?: {\n        with?: {\n          deeperKeys?: string;\n        }\n      }\n    };\n\n    const fullySet: DeepType = {\n      something: {\n        with: {\n          deeperKeys: 'like this'\n        }\n      }\n    };\n\n    const deepJust = Maybe.of(fullySet)\n      .get('something')\n      .get('with')\n      .get('deeperKeys');\n\n    console.log(deepJust); // Just('like this');\n\n    const partiallyUnset: DeepType = { something: { } };\n\n    const deepEmpty = Maybe.of(partiallyUnset)\n      .get('something')\n      .get('with')\n      .get('deeperKeys');\n\n    console.log(deepEmpty); // Nothing\n    ```\n   */\n  get<K extends keyof T>(this: Maybe<T>, key: K): Maybe<NonNullable<T[K]>> {\n    return get(key, this);\n  }\n}\n\n/**\n  A `Just` instance is the *present* variant instance of the\n  {@linkcode Maybe} type, representing the presence of a\n  value which may be absent. For a full discussion, see the module docs.\n\n  @typeparam T The type wrapped in this `Just` variant of `Maybe`.\n */\nexport interface Just<T> extends MaybeImpl<T> {\n  /** `Just` is always {@linkcode Variant.Just}. */\n  variant: 'Just';\n  /** The wrapped value. */\n  value: T;\n  isJust: true;\n  isNothing: false;\n}\n\n/**\n  A `Nothing` instance is the *absent* variant instance of the {@linkcode Maybe}\n  type, representing the presence of a value which may be absent. For a full\n  discussion, see the module docs.\n\n  @typeparam T The type which would be wrapped in a {@linkcode Just} variant of\n    the {@linkcode Maybe}.\n */\nexport interface Nothing<T>\n  extends Pick<MaybeImpl<T>, Exclude<keyof MaybeImpl<T>, 'value'>> {\n  /** `Nothing` is always {@linkcode Variant.Nothing}. */\n  readonly variant: 'Nothing';\n\n  isJust: false;\n  isNothing: true;\n}\n\n/**\n  Create a {@linkcode Maybe} instance which is a {@linkcode Just}.\n\n  `null` and `undefined` are allowed by the type signature so that the\n  function may `throw` on those rather than constructing a type like\n  `Maybe<undefined>`.\n\n  @typeparam T The type of the item contained in the `Maybe`.\n  @param value The value to wrap in a `Maybe.Just`.\n  @returns     An instance of `Maybe.Just<T>`.\n  @throws      If you pass `null` or `undefined`.\n */\nexport const just = MaybeImpl.just;\n\n/**\n  Create a {@linkcode Maybe} instance which is a {@linkcode Nothing}.\n\n  If you want to create an instance with a specific type, e.g. for use in a\n  function which expects a `Maybe<T>` where the `<T>` is known but you have no\n  value to give it, you can use a type parameter:\n\n  ```ts\n  const notString = Maybe.nothing<string>();\n  ```\n\n  @typeparam T The type of the item contained in the `Maybe`.\n  @returns     An instance of `Maybe.Nothing<T>`.\n */\nexport const nothing = MaybeImpl.nothing;\n\n/**\n  Create a {@linkcode Maybe} from any value.\n\n  To specify that the result should be interpreted as a specific type, you may\n  invoke `Maybe.of` with an explicit type parameter:\n\n  ```ts\n  import * as Maybe from 'true-myth/maybe';\n  const foo = Maybe.of<string>(null);\n  ```\n\n  This is usually only important in two cases:\n\n  1.  If you are intentionally constructing a `Nothing` from a known `null` or\n      undefined value *which is untyped*.\n  2.  If you are specifying that the type is more general than the value passed\n      (since TypeScript can define types as literals).\n\n  @typeparam T The type of the item contained in the `Maybe`.\n  @param value The value to wrap in a `Maybe`. If it is `undefined` or `null`,\n               the result will be `Nothing`; otherwise it will be the type of\n               the value passed.\n */\nexport const of = MaybeImpl.of;\n\n/**\n  Map over a {@linkcode Maybe} instance: apply the function to the wrapped value\n  if the instance is {@linkcode Just}, and return {@linkcode Nothing} if the\n  instance is `Nothing`.\n\n  `map` works a lot like `Array.prototype.map`: `Maybe` and `Array` are both\n  *containers* for other things. If you have no items in an array of numbers\n  named `foo` and call `foo.map(x => x + 1)`, you'll still just have an array\n  with nothing in it. But if you have any items in the array (`[2, 3]`), and you\n  call `foo.map(x => x + 1)` on it, you'll get a new array with each of those\n  items inside the array \"container\" transformed (`[3, 4]`).\n\n  That's exactly what's happening with `map`. If the container is *empty* – the\n  `Nothing` variant – you just get back an empty container. If the container has\n  something in it – the `Just` variant – you get back a container with the item\n  inside transformed.\n\n  (So... why not just use an array? The biggest reason is that an array can be\n  any length. With a `Maybe`, we're capturing the idea of \"something or nothing\"\n  rather than \"0 to n\" items. And this lets us implement a whole set of *other*\n  interfaces, like those in this module.)\n\n  #### Examples\n\n  ```ts\n  const length = (s: string) => s.length;\n\n  const justAString = Maybe.just('string');\n  const justTheStringLength = map(length, justAString);\n  console.log(justTheStringLength.toString()); // Just(6)\n\n  const notAString = Maybe.nothing<string>();\n  const notAStringLength = map(length, notAString);\n  console.log(notAStringLength.toString()); // \"Nothing\"\n  ```\n\n  @typeparam T The type of the wrapped value.\n  @typeparam U The type of the wrapped value of the returned `Maybe`.\n  @param mapFn The function to apply the value to if `Maybe` is `Just`.\n  @param maybe The `Maybe` instance to map over.\n  @returns     A new `Maybe` with the result of applying `mapFn` to the value in\n               a `Just`, or `Nothing` if `maybe` is `Nothing`.\n */\nexport function map<T, U>(mapFn: (t: T) => U): (maybe: Maybe<T>) => Maybe<U>;\nexport function map<T, U>(mapFn: (t: T) => U, maybe: Maybe<T>): Maybe<U>;\nexport function map<T, U>(\n  mapFn: (t: T) => U,\n  maybe?: Maybe<T>\n): Maybe<U> | ((maybe: Maybe<T>) => Maybe<U>) {\n  const op = (m: Maybe<T>) => (m.isJust ? just(mapFn(m.value)) : nothing<U>());\n  return curry1(op, maybe);\n}\n\n/**\n  Map over a {@linkcode Maybe} instance and get out the value if `maybe` is a\n  {@linkcode Just}, or return a default value if `maybe` is a\n  {@linkcode Nothing}.\n\n  #### Examples\n\n  ```ts\n  const length = (s: string) => s.length;\n\n  const justAString = Maybe.just('string');\n  const theStringLength = mapOr(0, length, justAString);\n  console.log(theStringLength); // 6\n\n  const notAString = Maybe.nothing<string>();\n  const notAStringLength = mapOr(0, length, notAString)\n  console.log(notAStringLength); // 0\n  ```\n\n  @typeparam T The type of the wrapped value.\n  @typeparam U The type of the wrapped value of the returned `Maybe`.\n  @param orU   The default value to use if `maybe` is `Nothing`\n  @param mapFn The function to apply the value to if `Maybe` is `Just`\n  @param maybe The `Maybe` instance to map over.\n */\nexport function mapOr<T, U>(orU: U, mapFn: (t: T) => U, maybe: Maybe<T>): U;\nexport function mapOr<T, U>(orU: U, mapFn: (t: T) => U): (maybe: Maybe<T>) => U;\nexport function mapOr<T, U>(\n  orU: U\n): (mapFn: (t: T) => U) => (maybe: Maybe<T>) => U;\nexport function mapOr<T, U>(\n  orU: U,\n  mapFn?: (t: T) => U,\n  maybe?: Maybe<T>\n):\n  | U\n  | ((maybe: Maybe<T>) => U)\n  | ((mapFn: (t: T) => U) => (maybe: Maybe<T>) => U) {\n  function fullOp(fn: (t: T) => U, m: Maybe<T>) {\n    return m.isJust ? fn(m.value) : orU;\n  }\n\n  function partialOp(fn: (t: T) => U): (maybe: Maybe<T>) => U;\n  function partialOp(fn: (t: T) => U, curriedMaybe: Maybe<T>): U;\n  function partialOp(\n    fn: (t: T) => U,\n    curriedMaybe?: Maybe<T>\n  ): U | ((maybe: Maybe<T>) => U) {\n    return curriedMaybe !== undefined\n      ? fullOp(fn, curriedMaybe)\n      : (extraCurriedMaybe: Maybe<T>) => fullOp(fn, extraCurriedMaybe);\n  }\n\n  return mapFn === undefined\n    ? partialOp\n    : maybe === undefined\n    ? partialOp(mapFn)\n    : partialOp(mapFn, maybe);\n}\n\n/**\n  Map over a {@linkcode Maybe} instance and get out the value if `maybe` is a\n  {@linkcode Just}, or use a function to construct a default value if `maybe` is\n  {@linkcode Nothing}.\n\n  #### Examples\n\n  ```ts\n  const length = (s: string) => s.length;\n  const getDefault = () => 0;\n\n  const justAString = Maybe.just('string');\n  const theStringLength = mapOrElse(getDefault, length, justAString);\n  console.log(theStringLength); // 6\n\n  const notAString = Maybe.nothing<string>();\n  const notAStringLength = mapOrElse(getDefault, length, notAString)\n  console.log(notAStringLength); // 0\n  ```\n\n  @typeparam T    The type of the wrapped value.\n  @typeparam U    The type of the wrapped value of the returned `Maybe`.\n  @param orElseFn The function to apply if `maybe` is `Nothing`.\n  @param mapFn    The function to apply to the wrapped value if `maybe` is\n  `Just`\n  @param maybe    The `Maybe` instance to map over.\n */\nexport function mapOrElse<T, U>(\n  orElseFn: () => U,\n  mapFn: (t: T) => U,\n  maybe: Maybe<T>\n): U;\nexport function mapOrElse<T, U>(\n  orElseFn: () => U,\n  mapFn: (t: T) => U\n): (maybe: Maybe<T>) => U;\nexport function mapOrElse<T, U>(\n  orElseFn: () => U\n): (mapFn: (t: T) => U) => (maybe: Maybe<T>) => U;\nexport function mapOrElse<T, U>(\n  orElseFn: () => U,\n  mapFn?: (t: T) => U,\n  maybe?: Maybe<T>\n):\n  | U\n  | ((maybe: Maybe<T>) => U)\n  | ((mapFn: (t: T) => U) => (maybe: Maybe<T>) => U) {\n  function fullOp(fn: (t: T) => U, m: Maybe<T>) {\n    return m.isJust ? fn(m.value) : orElseFn();\n  }\n\n  function partialOp(fn: (t: T) => U): (maybe: Maybe<T>) => U;\n  function partialOp(fn: (t: T) => U, curriedMaybe: Maybe<T>): U;\n  function partialOp(\n    fn: (t: T) => U,\n    curriedMaybe?: Maybe<T>\n  ): U | ((maybe: Maybe<T>) => U) {\n    return curriedMaybe !== undefined\n      ? fullOp(fn, curriedMaybe)\n      : (extraCurriedMaybe: Maybe<T>) => fullOp(fn, extraCurriedMaybe);\n  }\n\n  if (mapFn === undefined) {\n    return partialOp;\n  } else if (maybe === undefined) {\n    return partialOp(mapFn);\n  } else {\n    return partialOp(mapFn, maybe);\n  }\n}\n\n/**\n  You can think of this like a short-circuiting logical \"and\" operation on a\n  {@linkcode Maybe} type. If `maybe` is {@linkcode just}, then the result is the\n  `andMaybe`. If `maybe` is {@linkcode Nothing}, the result is `Nothing`.\n\n  This is useful when you have another `Maybe` value you want to provide if and\n  *only if* you have a `Just` – that is, when you need to make sure that if you\n  `Nothing`, whatever else you're handing a `Maybe` to *also* gets a `Nothing`.\n\n  Notice that, unlike in [`map`](#map) or its variants, the original `maybe` is\n  not involved in constructing the new `Maybe`.\n\n  #### Examples\n\n  ```ts\n  import Maybe from 'true-myth/maybe';\n\n  const justA = Maybe.just('A');\n  const justB = Maybe.just('B');\n  const nothing: Maybe<number> = nothing();\n\n  console.log(Maybe.and(justB, justA).toString());  // Just(B)\n  console.log(Maybe.and(justB, nothing).toString());  // Nothing\n  console.log(Maybe.and(nothing, justA).toString());  // Nothing\n  console.log(Maybe.and(nothing, nothing).toString());  // Nothing\n  ```\n\n  @typeparam T    The type of the initial wrapped value.\n  @typeparam U    The type of the wrapped value of the returned `Maybe`.\n  @param andMaybe The `Maybe` instance to return if `maybe` is `Just`\n  @param maybe    The `Maybe` instance to check.\n  @return         `Nothing` if the original `maybe` is `Nothing`, or `andMaybe`\n                  if the original `maybe` is `Just`.\n */\nexport function and<T, U>(andMaybe: Maybe<U>, maybe: Maybe<T>): Maybe<U>;\nexport function and<T, U>(andMaybe: Maybe<U>): (maybe: Maybe<T>) => Maybe<U>;\nexport function and<T, U>(\n  andMaybe: Maybe<U>,\n  maybe?: Maybe<T>\n): Maybe<U> | ((maybe: Maybe<T>) => Maybe<U>) {\n  const op = (m: Maybe<T>) => (m.isJust ? andMaybe : nothing<U>());\n  return curry1(op, maybe);\n}\n\n/**\n  Apply a function to the wrapped value if {@linkcode Just} and return a new\n  `Just` containing the resulting value; or return {@linkcode Nothing} if\n  `Nothing`.\n\n  This differs from {@linkcode map} in that `thenFn` returns another `Maybe`.\n  You can use `andThen` to combine two functions which *both* create a `Maybe`\n  from an unwrapped type.\n\n  You may find the `.then` method on an ES6 `Promise` helpful for comparison: if\n  you have a `Promise`, you can pass its `then` method a callback which returns\n  another `Promise`, and the result will not be a *nested* promise, but a single\n  `Promise`. The difference is that `Promise#then` unwraps *all* layers to only\n  ever return a single `Promise` value, whereas `Maybe.andThen` will not unwrap\n  nested `Maybe`s.\n\n  This is sometimes also known as `bind`, but *not* aliased as such because\n  [`bind` already means something in JavaScript][bind].\n\n  [bind]:\n  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\n\n  #### Example\n\n  (This is a somewhat contrived example, but it serves to show the way the\n  function behaves.)\n\n  ```ts\n  import Maybe, { andThen, toString } from 'true-myth/maybe';\n\n  // string -> Maybe<number>\n  const toMaybeLength = (s: string) => Maybe.of(s.length);\n\n  // Maybe<string>\n  const aMaybeString = Maybe.of('Hello, there!');\n\n  // Maybe<number>\n  const resultingLength = andThen(toMaybeLength, aMaybeString);\n  console.log(toString(resultingLength)); // 13\n  ```\n\n  Note that the result is not `Just(Just(13))`, but `Just(13)`!\n\n  @typeparam T  The type of the wrapped value.\n  @typeparam U  The type of the wrapped value in the resulting `Maybe`.\n  @param thenFn The function to apply to the wrapped `T` if `maybe` is `Just`.\n  @param maybe  The `Maybe` to evaluate and possibly apply a function to the\n                contents of.\n  @returns      The result of the `thenFn` (a new `Maybe`) if `maybe` is a\n                `Just`, otherwise `Nothing` if `maybe` is a `Nothing`.\n */\nexport function andThen<T, U>(\n  thenFn: (t: T) => Maybe<U>,\n  maybe: Maybe<T>\n): Maybe<U>;\nexport function andThen<T, U>(\n  thenFn: (t: T) => Maybe<U>\n): (maybe: Maybe<T>) => Maybe<U>;\nexport function andThen<T, U>(\n  thenFn: (t: T) => Maybe<U>,\n  maybe?: Maybe<T>\n): Maybe<U> | ((maybe: Maybe<T>) => Maybe<U>) {\n  const op = (m: Maybe<T>) => (m.isJust ? thenFn(m.value) : nothing<U>());\n  return maybe !== undefined ? op(maybe) : op;\n}\n\n/**\n  Provide a fallback for a given {@linkcode Maybe}. Behaves like a logical `or`:\n  if the `maybe` value is a {@linkcode Just}, returns that `maybe`; otherwise,\n  returns the `defaultMaybe` value.\n\n  This is useful when you want to make sure that something which takes a `Maybe`\n  always ends up getting a `Just` variant, by supplying a default value for the\n  case that you currently have a nothing.\n\n  ```ts\n  import Maybe from 'true-utils/maybe';\n\n  const justA = Maybe.just(\"a\");\n  const justB = Maybe.just(\"b\");\n  const aNothing: Maybe<string> = nothing();\n\n  console.log(Maybe.or(justB, justA).toString());  // Just(A)\n  console.log(Maybe.or(aNothing, justA).toString());  // Just(A)\n  console.log(Maybe.or(justB, aNothing).toString());  // Just(B)\n  console.log(Maybe.or(aNothing, aNothing).toString());  // Nothing\n  ```\n\n  @typeparam T        The type of the wrapped value.\n  @param defaultMaybe The `Maybe` to use if `maybe` is a `Nothing`.\n  @param maybe        The `Maybe` instance to evaluate.\n  @returns            `maybe` if it is a `Just`, otherwise `defaultMaybe`.\n */\nexport function or<T>(defaultMaybe: Maybe<T>, maybe: Maybe<T>): Maybe<T>;\nexport function or<T>(defaultMaybe: Maybe<T>): (maybe: Maybe<T>) => Maybe<T>;\nexport function or<T>(\n  defaultMaybe: Maybe<T>,\n  maybe?: Maybe<T>\n): Maybe<T> | ((maybe: Maybe<T>) => Maybe<T>) {\n  const op = (m: Maybe<T>) => (m.isJust ? m : defaultMaybe);\n  return maybe !== undefined ? op(maybe) : op;\n}\n\n/**\n  Like {@linkcode or}, but using a function to construct the alternative\n  {@linkcode Maybe}.\n\n  Sometimes you need to perform an operation using other data in the environment\n  to construct the fallback value. In these situations, you can pass a function\n  (which may be a closure) as the `elseFn` to generate the fallback `Maybe<T>`.\n\n  Useful for transforming empty scenarios based on values in context.\n\n  @typeparam T  The type of the wrapped value.\n  @param elseFn The function to apply if `maybe` is `Nothing`\n  @param maybe  The `maybe` to use if it is `Just`.\n  @returns      The `maybe` if it is `Just`, or the `Maybe` returned by `elseFn`\n                if the `maybe` is `Nothing`.\n */\nexport function orElse<T>(elseFn: () => Maybe<T>, maybe: Maybe<T>): Maybe<T>;\nexport function orElse<T>(\n  elseFn: () => Maybe<T>\n): (maybe: Maybe<T>) => Maybe<T>;\nexport function orElse<T>(\n  elseFn: () => Maybe<T>,\n  maybe?: Maybe<T>\n): Maybe<T> | ((maybe: Maybe<T>) => Maybe<T>) {\n  const op = (m: Maybe<T>) => (m.isJust ? m : elseFn());\n  return curry1(op, maybe);\n}\n\n/**\n  Safely get the value out of a {@linkcode Maybe}.\n\n  Returns the content of a {@linkcode Just} or `defaultValue` if\n  {@linkcode Nothing}. This is the recommended way to get a value out of a\n  `Maybe` most of the time.\n\n  ```ts\n  import Maybe from 'true-myth/maybe';\n\n  const notAString = Maybe.nothing<string>();\n  const isAString = Maybe.just('look ma! some characters!');\n\n  console.log(Maybe.unwrapOr('<empty>', notAString));  // \"<empty>\"\n  console.log(Maybe.unwrapOr('<empty>', isAString));  // \"look ma! some characters!\"\n  ```\n\n  @typeparam T        The type of the wrapped value.\n  @param defaultValue The value to return if `maybe` is a `Nothing`.\n  @param maybe        The `Maybe` instance to unwrap if it is a `Just`.\n  @returns            The content of `maybe` if it is a `Just`, otherwise\n                      `defaultValue`.\n */\nexport function unwrapOr<T, U>(defaultValue: U, maybe: Maybe<T>): T | U;\nexport function unwrapOr<T, U>(defaultValue: U): (maybe: Maybe<T>) => T | U;\nexport function unwrapOr<T, U>(defaultValue: U, maybe?: Maybe<T>) {\n  const op = (m: Maybe<T>) => (m.isJust ? m.value : defaultValue);\n  return curry1(op, maybe);\n}\n\n/**\n  Safely get the value out of a {@linkcode Maybe} by returning the wrapped value\n  if it is {@linkcode Just}, or by applying `orElseFn` if it is\n  {@linkcode Nothing}.\n\n  This is useful when you need to *generate* a value (e.g. by using current\n  values in the environment – whether preloaded or by local closure) instead of\n  having a single default value available (as in {@linkcode unwrapOr}).\n\n  ```ts\n  import Maybe from 'true-myth/maybe';\n\n  // You can imagine that someOtherValue might be dynamic.\n  const someOtherValue = 99;\n  const handleNothing = () => someOtherValue;\n\n  const aJust = Maybe.just(42);\n  console.log(Maybe.unwrapOrElse(handleNothing, aJust));  // 42\n\n  const aNothing = nothing<number>();\n  console.log(Maybe.unwrapOrElse(handleNothing, aNothing)); // 99\n  ```\n\n  @typeparam T  The wrapped value.\n  @param orElseFn A function used to generate a valid value if `maybe` is a\n                  `Nothing`.\n  @param maybe    The `Maybe` instance to unwrap if it is a `Just`\n  @returns        Either the content of `maybe` or the value returned from\n                  `orElseFn`.\n */\nexport function unwrapOrElse<T, U>(orElseFn: () => U, maybe: Maybe<T>): T | U;\nexport function unwrapOrElse<T, U>(\n  orElseFn: () => U\n): (maybe: Maybe<T>) => T | U;\nexport function unwrapOrElse<T, U>(\n  orElseFn: () => U,\n  maybe?: Maybe<T>\n): (T | U) | ((maybe: Maybe<T>) => T | U) {\n  const op = (m: Maybe<T>) => (m.isJust ? m.value : orElseFn());\n  return curry1(op, maybe);\n}\n\n/**\n  Re-export of {@linkcode Toolbelt.transposeResult transposeResult} from\n  {@linkcode Toolbelt} for backwards compatibility. Prefer to import it from\n  there instead:\n\n  ```ts\n  import type { transposeResult } from 'true-myth/toolbelt';\n  ```\n\n  @deprecated until 6.0\n */\nexport function fromResult<T>(result: Result<T, unknown>): Maybe<T> {\n  return Toolbelt.fromResult(result);\n}\n\n/**\n  Create a `String` representation of a {@linkcode Maybe} instance.\n\n  A {@linkcode Just} instance will be `Just(<representation of the value>)`,\n  where the representation of the value is simply the value's own `toString`\n  representation. For example:\n\n  | call                                   | output                  |\n  |----------------------------------------|-------------------------|\n  | `toString(Maybe.of(42))`               | `Just(42)`              |\n  | `toString(Maybe.of([1, 2, 3]))`        | `Just(1,2,3)`           |\n  | `toString(Maybe.of({ an: 'object' }))` | `Just([object Object])` |\n  | `toString(Maybe.nothing())`            | `Nothing`               |\n\n  @typeparam T The type of the wrapped value; its own `.toString` will be used\n               to print the interior contents of the `Just` variant.\n  @param maybe The value to convert to a string.\n  @returns     The string representation of the `Maybe`.\n */\nexport function toString<T extends { toString(): string }>(\n  maybe: Maybe<T>\n): string {\n  const body = maybe.isJust ? `(${maybe.value.toString()})` : '';\n  return `${maybe.variant}${body}`;\n}\n\n/**\n * Create an `Object` representation of a {@linkcode Maybe} instance.\n *\n * Useful for serialization. `JSON.stringify()` uses it.\n *\n * @param maybe The value to convert to JSON\n * @returns     The JSON representation of the `Maybe`\n */\nexport function toJSON<T>(maybe: Maybe<T>): MaybeJSON<unknown> {\n  return maybe.isJust\n    ? {\n        variant: maybe.variant,\n        value: isInstance(maybe.value) ? maybe.value.toJSON() : maybe.value,\n      }\n    : { variant: maybe.variant };\n}\n\n/**\n  A lightweight object defining how to handle each variant of a {@linkcode Maybe}.\n */\nexport type Matcher<T, A> = {\n  Just: (value: T) => A;\n  Nothing: () => A;\n};\n\n/**\n  Performs the same basic functionality as {@linkcode unwrapOrElse}, but instead\n  of simply unwrapping the value if it is {@linkcode Just} and applying a value\n  to generate the same default type if it is {@linkcode Nothing}, lets you\n  supply functions which may transform the wrapped type if it is `Just` or get a\n  default value for `Nothing`.\n\n  This is kind of like a poor man's version of pattern matching, which\n  JavaScript currently lacks.\n\n  Instead of code like this:\n\n  ```ts\n  import Maybe from 'true-myth/maybe';\n\n  const logValue = (mightBeANumber: Maybe<number>) => {\n    const valueToLog = Maybe.mightBeANumber.isJust\n      ? Maybe.unsafelyUnwrap(mightBeANumber).toString()\n      : 'Nothing to log.';\n\n    console.log(valueToLog);\n  };\n  ```\n\n  ...we can write code like this:\n\n  ```ts\n  import { match } from 'true-myth/maybe';\n\n  const logValue = (mightBeANumber: Maybe<number>) => {\n    const value = match(\n      {\n        Just: n => n.toString(),\n        Nothing: () => 'Nothing to log.',\n      },\n      mightBeANumber\n    );\n\n    console.log(value);\n  };\n  ```\n\n  This is slightly longer to write, but clearer: the more complex the resulting\n  expression, the hairer it is to understand the ternary. Thus, this is\n  especially convenient for times when there is a complex result, e.g. when\n  rendering part of a React component inline in JSX/TSX.\n\n  @param matcher A lightweight object defining what to do in the case of each\n                 variant.\n  @param maybe   The `maybe` instance to check.\n */\nexport function match<T, A>(matcher: Matcher<T, A>, maybe: Maybe<T>): A;\nexport function match<T, A>(matcher: Matcher<T, A>): (m: Maybe<T>) => A;\nexport function match<T, A>(\n  matcher: Matcher<T, A>,\n  maybe?: Maybe<T>\n): A | ((m: Maybe<T>) => A) {\n  const op = (curriedMaybe: Maybe<T>) =>\n    mapOrElse(matcher.Nothing, matcher.Just, curriedMaybe);\n  return curry1(op, maybe);\n}\n\n/**\n  Allows quick triple-equal equality check between the values inside two\n  {@linkcode Maybe maybe} instances without having to unwrap them first.\n\n  ```ts\n  const a = Maybe.of(3);\n  const b = Maybe.of(3);\n  const c = Maybe.of(null);\n  const d = Maybe.nothing();\n\n  Maybe.equals(a, b); // true\n  Maybe.equals(a, c); // false\n  Maybe.equals(c, d); // true\n  ```\n\n  @param mb A `maybe` to compare to.\n  @param ma A `maybe` instance to check.\n */\nexport function equals<T>(mb: Maybe<T>, ma: Maybe<T>): boolean;\nexport function equals<T>(mb: Maybe<T>): (ma: Maybe<T>) => boolean;\nexport function equals<T>(\n  mb: Maybe<T>,\n  ma?: Maybe<T>\n): boolean | ((a: Maybe<T>) => boolean) {\n  const op = (maybeA: Maybe<T>) =>\n    maybeA.match({\n      Just: (aVal) => mb.isJust && mb.value === aVal,\n      Nothing: () => mb.isNothing,\n    });\n\n  return curry1(op, ma);\n}\n\n/**\n  Allows you to *apply* (thus `ap`) a value to a function without having to take\n  either out of the context of their {@linkcode Maybe}s. This does mean that the\n  transforming function is itself within a `Maybe`, which can be hard to grok at\n  first but lets you do some very elegant things. For example, `ap` allows you\n  to this:\n\n  ```ts\n  import { just, nothing } from 'true-myth/maybe';\n\n  const one = just(1);\n  const five = just(5);\n  const none = nothing();\n\n  const add = (a: number) => (b: number) => a + b;\n  const maybeAdd = just(add);\n\n  maybeAdd.ap(one).ap(five); // Just(6)\n  maybeAdd.ap(one).ap(none); // Nothing\n  maybeAdd.ap(none).ap(five) // Nothing\n  ```\n\n  Without `ap`, you'd need to do something like a nested `match`:\n\n  ```ts\n  import { just, nothing } from 'true-myth/maybe';\n\n  const one = just(1);\n  const five = just(5);\n  const none = nothing();\n\n  one.match({\n    Just: n => five.match({\n      Just: o => just(n + o),\n      Nothing: () => nothing(),\n    }),\n    Nothing: ()  => nothing(),\n  }); // Just(6)\n\n  one.match({\n    Just: n => none.match({\n      Just: o => just(n + o),\n      Nothing: () => nothing(),\n    }),\n    Nothing: ()  => nothing(),\n  }); // Nothing\n\n  none.match({\n    Just: n => five.match({\n      Just: o => just(n + o),\n      Nothing: () => nothing(),\n    }),\n    Nothing: ()  => nothing(),\n  }); // Nothing\n  ```\n\n  And this kind of thing comes up quite often once you're using `Maybe` to\n  handle optionality throughout your application.\n\n  For another example, imagine you need to compare the equality of two\n  ImmutableJS data structures, where a `===` comparison won't work. With `ap`,\n  that's as simple as this:\n\n  ```ts\n  import Maybe from 'true-myth/maybe';\n  import { is as immutableIs, Set } from 'immutable';\n\n  const is = (first: unknown) =>  (second: unknown) => \n    immutableIs(first, second);\n\n  const x = Maybe.of(Set.of(1, 2, 3));\n  const y = Maybe.of(Set.of(2, 3, 4));\n\n  Maybe.of(is).ap(x).ap(y); // Just(false)\n  ```\n\n  Without `ap`, we're back to that gnarly nested `match`:\n\n  ```ts\n  import Maybe, { just, nothing } from 'true-myth/maybe';\n  import { is, Set } from 'immutable';\n\n  const x = Maybe.of(Set.of(1, 2, 3));\n  const y = Maybe.of(Set.of(2, 3, 4));\n\n  x.match({\n    Just: iX => y.match({\n      Just: iY => Maybe.just(is(iX, iY)),\n      Nothing: () => Maybe.nothing(),\n    })\n    Nothing: () => Maybe.nothing(),\n  }); // Just(false)\n  ```\n\n  In summary: anywhere you have two `Maybe` instances and need to perform an\n  operation that uses both of them, `ap` is your friend.\n\n  Two things to note, both regarding *currying*:\n\n  1.  All functions passed to `ap` must be curried. That is, they must be of the\n      form (for add) `(a: number) => (b: number) => a + b`, *not* the more usual\n      `(a: number, b: number) => a + b` you see in JavaScript more generally.\n\n      (Unfortunately, these do not currently work with lodash or Ramda's `curry`\n      helper functions. A future update to the type definitions may make that\n      work, but the intermediate types produced by those helpers and the more\n      general function types expected by this function do not currently align.)\n\n  2.  You will need to call `ap` as many times as there are arguments to the\n      function you're dealing with. So in the case of this `add3` function,\n      which has the \"arity\" (function argument count) of 3 (`a` and `b`), you'll\n      need to call `ap` twice: once for `a`, and once for `b`. To see why, let's\n      look at what the result in each phase is:\n\n      ```ts\n      const add3 = (a: number) => (b: number) => (c: number) => a + b + c;\n\n      const maybeAdd = just(add); // Just((a: number) => (b: number) => (c: number) => a + b + c)\n      const maybeAdd1 = maybeAdd.ap(just(1)); // Just((b: number) => (c: number) => 1 + b + c)\n      const maybeAdd1And2 = maybeAdd1.ap(just(2)) // Just((c: number) => 1 + 2 + c)\n      const final = maybeAdd1.ap(just(3)); // Just(4)\n      ```\n\n      So for `toString`, which just takes a single argument, you would only need\n      to call `ap` once.\n\n      ```ts\n      const toStr = (v: { toString(): string }) => v.toString();\n      just(toStr).ap(12); // Just(\"12\")\n      ```\n\n  One other scenario which doesn't come up *quite* as often but is conceivable\n  is where you have something that may or may not actually construct a function\n  for handling a specific `Maybe` scenario. In that case, you can wrap the\n  possibly-present in `ap` and then wrap the values to apply to the function to\n  in `Maybe` themselves.\n\n  __Aside:__ `ap` is not named `apply` because of the overlap with JavaScript's\n  existing [`apply`] function – and although strictly speaking, there isn't any\n  direct overlap (`Maybe.apply` and `Function.prototype.apply` don't intersect\n  at all) it's useful to have a different name to avoid implying that they're\n  the same.\n\n  [`apply`]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\n\n  @param maybeFn maybe a function from T to U\n  @param maybe maybe a T to apply to `fn`\n */\nexport function ap<T, U>(\n  maybeFn: Maybe<(t: T) => U>,\n  maybe: Maybe<T>\n): Maybe<U>;\nexport function ap<T, U>(\n  maybeFn: Maybe<(t: T) => U>\n): (maybe: Maybe<T>) => Maybe<U>;\nexport function ap<T, U>(\n  maybeFn: Maybe<(t: T) => U>,\n  maybe?: Maybe<T>\n): Maybe<U> | ((val: Maybe<T>) => Maybe<U>) {\n  const op = (m: Maybe<T>) => m.andThen((val) => maybeFn.map((fn) => fn(val)));\n  return curry1(op, maybe);\n}\n\n/**\n  Determine whether an item is an instance of {@linkcode Maybe}.\n\n  @param item The item to check.\n */\nexport function isInstance<T>(item: unknown): item is Maybe<T> {\n  return item instanceof Maybe;\n}\n\nexport type Predicate<T> = (element: T, index: number, array: T[]) => boolean;\n\n// NOTE: documentation is lightly adapted from the MDN and TypeScript docs for\n// `Array.prototype.find`.\n/**\n  Safely search for an element in an array.\n  \n  This function behaves like `Array.prototype.find`, but returns `Maybe<T>`\n  instead of `T | undefined`.\n  \n  ## Examples\n\n  The basic form is:\n\n  ```ts\n  import Maybe from 'true-myth/maybe';\n\n  let array = [1, 2, 3];\n  Maybe.find(v => v > 1, array); // Just(2)\n  Maybe.find(v => v < 1, array); // Nothing\n  ```\n\n  The function is curried so you can use it in a functional chain. For example\n  (leaving aside error handling on a bad response for simplicity), suppose the\n  url `https://arrays.example.com` returned a JSON payload with the type\n  `Array<{ count: number, name: string }>`, and we wanted to get the first\n  of these where `count` was at least 100. We could write this:\n\n  ```ts\n  import Maybe from 'true-myth/maybe';\n\n  type Item = { count: number; name: string };\n  type Response = Array<Item>;\n\n  // curried variant!\n  const findAtLeast100 = Maybe.find(({ count }: Item) => count > 100);\n\n  fetch('https://arrays.example.com')\n    .then(response => response.json() as Response)\n    .then(findAtLeast100)\n    .then(found => {\n      if (found.isJust()) {\n        console.log(`The matching value is ${found.value.name}!`);\n      }\n    });\n  ```\n  \n  @param predicate  A function to execute on each value in the array, returning\n                    `true` when the item in the array matches the condition. The\n                    signature for `predicate` is identical to the signature for\n                    the first argument to `Array.prototype.find`. The function\n                    is called once for each element of the array, in ascending\n                    order, until it finds one where predicate returns true. If\n                    such an element is found, find immediately returns that\n                    element value wrapped in `Just`. Otherwise, `Maybe.find`\n                    returns `Nothing`.\n * @param array     The array to search using the predicate.\n */\nexport function find<T>(predicate: Predicate<T>, array: T[]): Maybe<T>;\nexport function find<T>(predicate: Predicate<T>): (array: T[]) => Maybe<T>;\nexport function find<T>(\n  predicate: Predicate<T>,\n  array?: T[]\n): Maybe<T> | ((array: T[]) => Maybe<T>) {\n  const op = (a: T[]) => Maybe.of(a.find(predicate));\n  return curry1(op, array);\n}\n\n/**\n  Safely get the first item from a list, returning {@linkcode Just} the first\n  item if the array has at least one item in it, or {@linkcode Nothing} if it is\n  empty.\n\n  ## Examples\n\n  ```ts\n  let empty = [];\n  Maybe.head(empty); // => Nothing\n\n  let full = [1, 2, 3];\n  Maybe.head(full); // => Just(1)\n  ```\n\n  @param array The array to get the first item from.\n */\nexport function first<T>(array: Array<T | null | undefined>): Maybe<T> {\n  return Maybe.of(array[0]);\n}\n\n/**\n  A convenience alias for `Maybe.first`.\n  @deprecated until 6.0\n */\nexport const head = first;\n\n/**\n  Safely get the last item from a list, returning {@linkcode Just} the last item\n  if the array has at least one item in it, or {@linkcode Nothing} if it is\n  empty.\n\n  ## Examples\n\n  ```ts\n  let empty = [];\n  Maybe.last(empty); // => Nothing\n\n  let full = [1, 2, 3];\n  Maybe.last(full); // => Just(3)\n  ```\n\n  @param array The array to get the first item from.\n */\nexport function last<T>(array: Array<T | null | undefined>): Maybe<T> {\n  return Maybe.of(array[array.length - 1]);\n}\n\n/**\n  Given an array or tuple of {@linkcode Maybe}s, return a `Maybe` of the array\n  or tuple values.\n\n  -   Given an array of type `Array<Maybe<A> | Maybe<B>>`, the resulting type is\n      `Maybe<Array<A | B>>`.\n  -   Given a tuple of type `[Maybe<A>, Maybe<B>]`, the resulting type is\n      `Maybe<[A, B]>`.\n\n  If any of the items in the array or tuple are {@linkcode Nothing}, the whole\n  result is `Nothing`. If all items in the array or tuple are {@linkcode Just},\n  the whole result is `Just`.\n\n  ## Examples\n\n  Given an array with a mix of `Maybe` types in it, both `allJust` and `mixed`\n  here will have the type `Maybe<Array<string | number>>`, but will be `Just`\n  and `Nothing` respectively.\n\n  ```ts\n  import Maybe from 'true-myth/maybe';\n\n  let valid = [Maybe.just(2), Maybe.just('three')];\n  let allJust = Maybe.arrayTranspose(valid); // => Just([2, 'three']);\n\n  let invalid = [Maybe.just(2), Maybe.nothing<string>()];\n  let mixed = Maybe.arrayTranspose(invalid); // => Nothing\n  ```\n\n  When working with a tuple type, the structure of the tuple is preserved. Here,\n  for example, `result` has the type `Maybe<[string, number]>` and will be\n  `Nothing`:\n\n  ```ts\n  import Maybe from 'true-myth/maybe';\n\n  type Tuple = [Maybe<string>, Maybe<number>];\n\n  let invalid: Tuple = [Maybe.just('wat'), Maybe.nothing()];\n  let result = Maybe.arrayTranspose(invalid);  // => Nothing\n  ```\n\n  If all of the items in the tuple are `Just`, the result is `Just` wrapping the\n  tuple of the values of the items. Here, for example, `result` again has the\n  type `Maybe<[string, number]>` and will be `Just(['hey', 12]`:\n\n  ```ts\n  import Maybe from 'true-myth/maybe';\n\n  type Tuple = [Maybe<string>, Maybe<number>];\n\n  let valid: Tuple = [Maybe.just('hey'), Maybe.just(12)];\n  let result = Maybe.arrayTranspose(valid);  // => Just(['hey', 12])\n  ```\n\n  __Note:__ this does not work with `ReadonlyArray`. If you have a\n  `ReadonlyArray` you wish to operate on, you must cast it to `Array` insetad.\n  This cast is always safe here, because `Array` is a *wider* type than\n  `ReadonlyArray`.\n\n  @param maybes The `Maybe`s to resolve to a single `Maybe`.\n */\nexport function transposeArray<T extends Array<Maybe<unknown>>>(\n  maybes: T\n): TransposedArray<T> {\n  // The slightly odd-seeming use of `[...ms, m]` here instead of `concat` is\n  // necessary to preserve the structure of the value passed in. The goal is for\n  // `[Maybe<string>, [Maybe<number>, Maybe<boolean>]]` not to be flattened into\n  // `Maybe<[string, number, boolean]>` (as `concat` would do) but instead to\n  // produce `Maybe<[string, [number, boolean]]>`.\n  return maybes.reduce(\n    (acc: Maybe<unknown[]>, m) => acc.andThen((ms) => m.map((m) => [...ms, m])),\n    just([] as unknown[]) as TransposedArray<T>\n  ) as TransposedArray<T>;\n}\n\nexport type Unwrapped<T> = T extends Maybe<infer U> ? U : T;\n\nexport type TransposedArray<T extends Array<Maybe<unknown>>> = Maybe<{\n  [K in keyof T]: Unwrapped<T[K]>;\n}>;\n\n/**\n  Legacy alias for {@linkcode transposeArray}.\n\n  @deprecated\n */\nexport const all = transposeArray;\n\n/**\n  Legacy alias for {@linkcode transposeArray}.\n\n  @deprecated\n */\nexport const tuple = transposeArray;\n\n/**\n  Re-export of {@linkcode Toolbelt.transposeResult transposeResult} from\n  {@linkcode Toolbelt} for backwards compatibility. Prefer to import it from\n  there instead:\n\n  ```ts\n  import type { transposeResult } from 'true-myth/toolbelt';\n  ```\n\n  @deprecated until 6.0\n */\nexport function transposeResult<T, E>(result: Result<Maybe<T>, E>) {\n  return Toolbelt.transposeResult(result);\n}\n\n/**\n  Local implementation of {@linkcode Toolbelt.toOkOrErr toOkOrErr} from\n  {@linkcode Toolbelt} for backwards compatibility. Prefer to import it from\n  there instead:\n\n  ```ts\n  import type { toOkOrErr } from 'true-myth/toolbelt';\n  ```\n\n  @deprecated until 6.0\n */\nexport function toOkOrErr<T, E>(error: E, maybe: Maybe<T>): Result<T, E>;\nexport function toOkOrErr<T, E>(error: E): (maybe: Maybe<T>) => Result<T, E>;\nexport function toOkOrErr<T, E>(\n  error: E,\n  maybe?: Maybe<T>\n): Result<T, E> | ((maybe: Maybe<T>) => Result<T, E>) {\n  const op = (m: Maybe<T>) =>\n    m.isJust ? Result.ok<T, E>(m.value) : Result.err<T, E>(error);\n  return maybe !== undefined ? op(maybe) : op;\n}\n\n/**\n  Local implementation of {@linkcode Toolbelt.toOkOrElseErr toOkOrElseErr} from\n  {@linkcode Toolbelt} for backwards compatibility. Prefer to import it from\n  there instead:\n\n  ```ts\n  import type { toOkOrElseErr } from 'true-myth/toolbelt';\n  ```\n\n  @deprecated until 6.0\n */\nexport function toOkOrElseErr<T, E>(\n  elseFn: () => E,\n  maybe: Maybe<T>\n): Result<T, E>;\nexport function toOkOrElseErr<T, E>(\n  elseFn: () => E\n): (maybe: Maybe<T>) => Result<T, E>;\nexport function toOkOrElseErr<T, E>(\n  elseFn: () => E,\n  maybe?: Maybe<T>\n): Result<T, E> | ((maybe: Maybe<T>) => Result<T, E>) {\n  const op = (m: Maybe<T>) =>\n    m.isJust ? Result.ok<T, E>(m.value) : Result.err<T, E>(elseFn());\n  return curry1(op, maybe);\n}\n\n/**\n  Safely extract a key from an object, returning {@linkcode Just} if the key has\n  a value on the object and {@linkcode Nothing} if it does not.\n\n  The check is type-safe: you won't even be able to compile if you try to look\n  up a property that TypeScript *knows* doesn't exist on the object.\n\n  ```ts\n  type Person = { name?: string };\n\n  const me: Person = { name: 'Chris' };\n  console.log(Maybe.property('name', me)); // Just('Chris')\n\n  const nobody: Person = {};\n  console.log(Maybe.property('name', nobody)); // Nothing\n  ```\n\n  However, it also works correctly with dictionary types:\n\n  ```ts\n  type Dict<T> = { [key: string]: T };\n\n  const score: Dict<number> = {\n    player1: 0,\n    player2: 1\n  };\n\n  console.log(Maybe.property('player1', score)); // Just(0)\n  console.log(Maybe.property('player2', score)); // Just(1)\n  console.log(Maybe.property('player3', score)); // Nothing\n  ```\n\n  The order of keys is so that it can be partially applied:\n\n  ```ts\n  type Person = { name?: string };\n\n  const lookupName = Maybe.property('name');\n\n  const me: Person = { name: 'Chris' };\n  console.log(lookupName(me)); // Just('Chris')\n\n  const nobody: Person = {};\n  console.log(lookupName(nobody)); // Nothing\n  ```\n\n  @param key The key to pull out of the object.\n  @param obj The object to look up the key from.\n */\nexport function property<T, K extends keyof T>(\n  key: K,\n  obj: T\n): Maybe<NonNullable<T[K]>>;\nexport function property<T, K extends keyof T>(\n  key: K\n): (obj: T) => Maybe<NonNullable<T[K]>>;\nexport function property<T, K extends keyof T>(\n  key: K,\n  obj?: T\n): Maybe<NonNullable<T[K]>> | ((obj: T) => Maybe<NonNullable<T[K]>>) {\n  const op = (a: T) => Maybe.of(a[key]) as Maybe<NonNullable<T[K]>>;\n  return curry1(op, obj);\n}\n\n/**\n  Safely extract a key from a {@linkcode Maybe} of an object, returning\n  {@linkcode Just} if the key has a value on the object and\n  {@linkcode MaybNothing} if it does not. (Like {@linkcode property} but\n  operating on a `Maybe<T>` rather than directly on a `T`.)\n\n  The check is type-safe: you won't even be able to compile if you try to look\n  up a property that TypeScript *knows* doesn't exist on the object.\n\n  ```ts\n  import { get, just, nothing } from 'true-myth/maybe';\n\n  type Person = { name?: string };\n\n  const me: Maybe<Person> = just({ name: 'Chris' });\n  console.log(get('name', me)); // Just('Chris')\n\n  const nobody = nothing<Person>();\n  console.log(get('name', nobody)); // Nothing\n  ```\n\n  However, it also works correctly with dictionary types:\n\n  ```ts\n  import { get, just } from 'true-myth/maybe';\n\n  type Dict<T> = { [key: string]: T };\n\n  const score: Maybe<Dict<number>> = just({\n    player1: 0,\n    player2: 1\n  });\n\n  console.log(get('player1', score)); // Just(0)\n  console.log(get('player2', score)); // Just(1)\n  console.log(get('player3', score)); // Nothing\n  ```\n\n  The order of keys is so that it can be partially applied:\n\n  ```ts\n  import { get, just } from 'true-myth/maybe';\n\n  type Person = { name?: string };\n\n  const lookupName = get('name');\n\n  const me: Person = { name: 'Chris' };\n  console.log(lookupName(me)); // Just('Chris')\n\n  const nobody: Person = {};\n  console.log(lookupName(nobody)); // Nothing\n  ```\n\n  @param key The key to pull out of the object.\n  @param obj The object to look up the key from.\n */\nexport function get<T, K extends keyof T>(\n  key: K,\n  maybeObj: Maybe<T>\n): Maybe<NonNullable<T[K]>>;\nexport function get<T, K extends keyof T>(\n  key: K\n): (maybeObj: Maybe<T>) => Maybe<NonNullable<T[K]>>;\nexport function get<T, K extends keyof T>(\n  key: K,\n  maybeObj?: Maybe<T>\n):\n  | Maybe<NonNullable<T[K]>>\n  | ((maybeObj: Maybe<T>) => Maybe<NonNullable<T[K]>>) {\n  return curry1(andThen(property<T, K>(key)), maybeObj);\n}\n\n/**\n  Transform a function from a normal JS function which may return `null` or\n  `undefined` to a function which returns a {@linkcode Maybe} instead.\n\n  For example, dealing with the `Document#querySelector` DOM API involves a\n  *lot* of things which can be `null`:\n\n  ```ts\n  const foo = document.querySelector('#foo');\n  let width: number;\n  if (foo !== null) {\n    width = foo.getBoundingClientRect().width;\n  } else {\n    width = 0;\n  }\n\n  const getStyle = (el: HTMLElement, rule: string) => el.style[rule];\n  const bar = document.querySelector('.bar');\n  let color: string;\n  if (bar != null) {\n    let possibleColor = getStyle(bar, 'color');\n    if (possibleColor !== null) {\n      color = possibleColor;\n    } else {\n      color = 'black';\n    }\n  }\n  ```\n\n  (Imagine in this example that there were more than two options: the\n  simplifying workarounds you commonly use to make this terser in JS, like the\n  ternary operator or the short-circuiting `||` or `??` operators, eventually\n  become very confusing with more complicated flows.)\n\n  We can work around this with `Maybe`, always wrapping each layer in\n  {@linkcode Maybe.of} invocations, and this is *somewhat* better:\n\n  ```ts\n  import Maybe from 'true-myth/maybe';\n\n  const aWidth = Maybe.of(document.querySelector('#foo'))\n    .map(el => el.getBoundingClientRect().width)\n    .unwrapOr(0);\n\n  const aColor = Maybe.of(document.querySelector('.bar'))\n    .andThen(el => Maybe.of(getStyle(el, 'color'))\n    .unwrapOr('black');\n  ```\n\n  With `wrapReturn`, though, you can create a transformed version of a function\n  *once* and then be able to use it freely throughout your codebase, *always*\n  getting back a `Maybe`:\n\n  ```ts\n  import { wrapReturn } from 'true-myth/maybe';\n\n  const querySelector = wrapReturn(document.querySelector.bind(document));\n  const safelyGetStyle = wrapReturn(getStyle);\n\n  const aWidth = querySelector('#foo')\n    .map(el => el.getBoundingClientRect().width)\n    .unwrapOr(0);\n\n  const aColor = querySelector('.bar')\n    .andThen(el => safelyGetStyle(el, 'color'))\n    .unwrapOr('black');\n  ```\n\n  @param fn The function to transform; the resulting function will have the\n            exact same signature except for its return type.\n */\nexport function wrapReturn<\n  F extends AnyFunction,\n  P extends Parameters<F>,\n  R extends NonNullable<ReturnType<F>>\n>(fn: F): (...args: P) => Maybe<R> {\n  return (...args) => Maybe.of(fn(...args)) as Maybe<R>;\n}\n\n/**\n  This is the standard *correct* definition for a function which is a proper\n  subtype of all other functions: parameters of a function subtype must be\n  *wider* than those of the base type, and return types must be *narrower*.\n  Everything is wider than `never[]` and narrower than `unknown`, so any\n  function is assignable to places this is used.\n */\nexport type AnyFunction = (...args: never[]) => unknown;\n\n/**\n  The public interface for the {@linkcode Maybe} class *as a value*: a\n  constructor and the associated static properties.\n */\nexport interface MaybeConstructor {\n  new <T>(value?: T | null | undefined): Maybe<T>;\n  of: typeof MaybeImpl.of;\n  just: typeof MaybeImpl.just;\n  nothing: typeof MaybeImpl.nothing;\n}\n\n/** A value which may ({@linkcode Just `Just<T>`}) or may not\n * ({@linkcode Nothing}) be present. */\nexport type Maybe<T> = Just<T> | Nothing<T>;\nexport const Maybe = MaybeImpl as MaybeConstructor;\nexport default Maybe;\n","import { Maybe, Unwrapped } from './maybe';\nimport { Result } from './result';\n//import { Maybe, Result } from 'true-myth';\n//import type { Unwrapped } from 'true-myth/maybe';\n\n// Should be used in situation where we are absolutely\n// want to throw an exception\n// eg in tests\n// DO NOT USE NORMALLY IN CODE\nconst throwUnwrapErr = () => {\n  throw new Error('Failed to unwrap');\n};\n\nexport { Maybe, Result, throwUnwrapErr };\nexport type { Unwrapped as UnwrapMaybe };\n","export const PX_PER_LEVEL = 22;\nexport const COLLAPSE_THRESHOLD = 5;\nexport const LABEL_THRESHOLD = 20;\nexport const GAP = 0.5;\nexport const BAR_HEIGHT = PX_PER_LEVEL - GAP;\n","/* eslint-disable import/prefer-default-export */\nfunction createFF(viewType: 'single' | 'double') {\n  switch (viewType) {\n    case 'single': {\n      return {\n        format: 'single',\n        jStep: 4,\n        jName: 3,\n        getBarOffset: (level: number[], j: number) => level[j],\n        getBarTotal: (level: number[], j: number) => level[j + 1],\n        getBarTotalDiff: (level: number[], j: number) => 0,\n        getBarSelf: (level: number[], j: number) => level[j + 2],\n        getBarSelfDiff: (level: number[], j: number) => 0,\n        getBarName: (level: number[], j: number) => level[j + 3],\n      };\n    }\n    case 'double': {\n      return {\n        format: 'double',\n        jStep: 7,\n        jName: 6,\n        getBarOffset: (level: number[], j: number) => level[j] + level[j + 3],\n        getBarTotal: (level: number[], j: number) =>\n          level[j + 4] + level[j + 1],\n        getBarTotalLeft: (level: number[], j: number) => level[j + 1],\n        getBarTotalRght: (level: number[], j: number) => level[j + 4],\n        getBarTotalDiff: (level: number[], j: number) => {\n          return level[j + 4] - level[j + 1];\n        },\n        getBarSelf: (level: number[], j: number) => level[j + 5] + level[j + 2],\n        getBarSelfLeft: (level: number[], j: number) => level[j + 2],\n        getBarSelfRght: (level: number[], j: number) => level[j + 5],\n        getBarSelfDiff: (level: number[], j: number) =>\n          level[j + 5] - level[j + 2],\n        getBarName: (level: number[], j: number) => level[j + 6],\n      };\n    }\n\n    default: {\n      throw new Error(`Invalid viewType: '${viewType}'`);\n    }\n  }\n}\n\nfunction deltaDiffWrapper(format: 'single' | 'double', levels: number[][]) {\n  let mutable_levels = [...levels];\n\n  function deltaDiff(levels: number[][], start: number, step: number) {\n    for (const level of levels) {\n      let prev = 0;\n      for (let i = start; i < level.length; i += step) {\n        level[i] += prev;\n        prev = level[i] + level[i + 1];\n      }\n    }\n  }\n\n  if (format === 'double') {\n    deltaDiff(mutable_levels, 0, 7);\n    deltaDiff(mutable_levels, 3, 7);\n  } else {\n    deltaDiff(mutable_levels, 0, 4);\n  }\n\n  return mutable_levels;\n}\n\nexport { createFF, deltaDiffWrapper };\n","export function numberWithCommas(x: number): string {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\nexport function formatPercent(ratio: number) {\n  const percent = ratioToPercent(ratio);\n  return `${percent}%`;\n}\n\nexport function ratioToPercent(ratio: number) {\n  return Math.round(10000 * ratio) / 100;\n}\n\nexport enum Units {\n  Samples = 'samples',\n  Objects = 'objects',\n  Bytes = 'bytes',\n}\nexport function getFormatter(max: number, sampleRate: number, units: Units) {\n  switch (units) {\n    case Units.Samples:\n      return new DurationFormatter(max / sampleRate);\n    case Units.Objects:\n      return new ObjectsFormatter(max);\n    case Units.Bytes:\n      return new BytesFormatter(max);\n    default:\n      //  throw new Error(`Unsupported unit: ${units}`);\n      return new DurationFormatter(max / sampleRate);\n  }\n}\n\n//// this is a class and not a function because we can save some time by\n////   precalculating divider and suffix and not doing it on each iteration\nclass DurationFormatter {\n  divider = 1;\n  suffix: string = 'second';\n  durations: [number, string][] = [\n    [60, 'minute'],\n    [60, 'hour'],\n    [24, 'day'],\n    [30, 'month'],\n    [12, 'year'],\n  ];\n  constructor(maxDur: number) {\n    for (var i = 0; i < this.durations.length; i++) {\n      if (maxDur >= this.durations[i][0]) {\n        this.divider *= this.durations[i][0];\n        maxDur /= this.durations[i][0];\n        this.suffix = this.durations[i][1];\n      } else {\n        break;\n      }\n    }\n  }\n\n  format(samples: number, sampleRate: number) {\n    let n: any = samples / sampleRate / this.divider;\n    let nStr = n.toFixed(2);\n\n    if (n >= 0 && n < 0.01) {\n      nStr = '< 0.01';\n    } else if (n <= 0 && n > -0.01) {\n      nStr = '< 0.01';\n    }\n\n    return `${nStr} ${this.suffix}` + (n == 1 ? '' : 's');\n  }\n}\n\nexport class ObjectsFormatter {\n  divider = 1;\n  suffix = '';\n  objects: [number, string][] = [\n    [1000, 'K'],\n    [1000, 'M'],\n    [1000, 'G'],\n    [1000, 'T'],\n    [1000, 'P'],\n  ];\n  constructor(maxObjects: number) {\n    for (var i = 0; i < this.objects.length; i++) {\n      if (maxObjects >= this.objects[i][0]) {\n        this.divider *= this.objects[i][0];\n        maxObjects /= this.objects[i][0];\n        this.suffix = this.objects[i][1];\n      } else {\n        break;\n      }\n    }\n  }\n\n  // TODO:\n  // how to indicate that sampleRate doesn't matter?\n  format(samples: number, sampleRate: number) {\n    let n = samples / this.divider;\n    let nStr = n.toFixed(2);\n\n    if (n >= 0 && n < 0.01) {\n      nStr = '< 0.01';\n    } else if (n <= 0 && n > -0.01) {\n      nStr = '< 0.01';\n    }\n    return `${nStr} ${this.suffix}`;\n  }\n}\n\nexport class BytesFormatter {\n  divider = 1;\n  suffix = 'bytes';\n  bytes: [number, string][] = [\n    [1024, 'KB'],\n    [1024, 'MB'],\n    [1024, 'GB'],\n    [1024, 'TB'],\n    [1024, 'PB'],\n  ];\n  constructor(maxBytes: number) {\n    for (var i = 0; i < this.bytes.length; i++) {\n      if (maxBytes >= this.bytes[i][0]) {\n        this.divider *= this.bytes[i][0];\n        maxBytes /= this.bytes[i][0];\n        this.suffix = this.bytes[i][1];\n      } else {\n        break;\n      }\n    }\n  }\n\n  format(samples: number, sampleRate: number) {\n    let n = samples / this.divider;\n    let nStr = n.toFixed(2);\n\n    if (n >= 0 && n < 0.01) {\n      nStr = '< 0.01';\n    } else if (n <= 0 && n > -0.01) {\n      nStr = '< 0.01';\n    }\n\n    return `${nStr} ${this.suffix}`;\n  }\n}\n","// Even though there are only 2 values\n// Which could be represented in a boolean fashion\n// Let's use an Enum in case we want to use new modes,\n// for example a new heuristic based on the language\nexport type FitModes = 'TAIL' | 'HEAD';\n\nconst margin = 3;\n\n/**\n * Returns a text and margin left used to write text into a canvas rectangle\n *\n * @param {FitModes} mode -\n * @param {number} charSize - Size in pixels of an individual character. Assumes it's a monospace font.\n * @param {number} rectWidth - Width in pixels of the rectangle\n * @param {string} fullText - The text that will be first tried.\n * @param {string} shortText - The text that willbe used when fullText can't fit. It's normally a substring of the original text.\n */\nexport function fitToCanvasRect({\n  mode,\n  charSize,\n  rectWidth,\n  fullText,\n  shortText,\n}: {\n  mode: FitModes;\n  charSize: number;\n  rectWidth: number;\n  fullText: string;\n  shortText: string;\n}) {\n  switch (mode) {\n    case 'HEAD':\n      // Case 1:\n      // content fits rectangle width\n      // | rectangle |\n      // | text |\n      if (charSize * fullText.length <= rectWidth) {\n        // assume it's a monospaced font\n        return {\n          mode,\n          text: fullText,\n          marginLeft: margin,\n        };\n      }\n\n      // assume it's a monospaced font\n      // if not the case, use\n      // ctx.measureText(shortName).width\n      const shortTextWidth = charSize * shortText.length;\n\n      // Case 2:\n      // short text fits rectangle width\n      // | rectangle |\n      // | long_text_text |\n      // | shorttext |\n      if (shortTextWidth <= rectWidth) {\n        // assume it's a monospaced font\n        return {\n          mode,\n          text: shortText,\n          marginLeft: margin,\n        };\n      }\n\n      // Case 3:\n      // short text is bigger than rectangle width\n      // add a negative margin left\n      // so that the 'tail' of the string is visible\n      //     | rectangle |\n      // | my_short_text |\n      return {\n        mode,\n        text: shortText,\n        marginLeft: -(shortTextWidth - rectWidth + margin),\n      };\n\n    // Case 3:\n    // Normal\n    case 'TAIL':\n    default:\n      return {\n        mode,\n        text: fullText,\n        marginLeft: margin,\n      };\n  }\n}\n\n/**\n * Returns an inline style in React format\n * used to fit the content into a table cell\n * or an empty object if not applicable.\n * @param {FitModes} mode - The mode\n */\nexport function fitIntoTableCell(mode: FitModes) {\n  switch (mode) {\n    case 'HEAD':\n      return {\n        // prints from right to left\n        direction: 'rtl',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n      };\n\n    case 'TAIL':\n    default:\n      return {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n      };\n  }\n}\n","/* eslint-disable import/prefer-default-export */\nimport { createFF } from '../../../util/flamebearer';\n// not entirely sure where this should fit\n\nfunction getRatios(\n  // Just to provide some help, so that people don't run getRatios on viewType 'single'\n  viewType: 'double',\n  level: number[],\n  j: number,\n  leftTicks: number,\n  rightTicks: number\n) {\n  const ff = createFF(viewType);\n\n  // throw an error\n  // since otherwise there's no way to calculate a diff\n  if (!leftTicks || !rightTicks) {\n    // ideally this should never happen\n    // however there must be a race condition caught in CI\n    // https://github.com/pyroscope-io/pyroscope/pull/439/checks?check_run_id=3808581168\n    console.error(\n      \"Properties 'rightTicks' and 'leftTicks' are required. Can't calculate ratio.\"\n    );\n    return { leftRatio: 0, rightRatio: 0 };\n  }\n\n  if (!ff.getBarTotalLeft || !ff.getBarTotalRght) {\n    throw new Error(`missing ff.getBarTotalLeft or ff.getBarTotalRght`);\n  }\n\n  const leftRatio = ff.getBarTotalLeft(level, j) / leftTicks;\n  const rightRatio = ff.getBarTotalRght(level, j) / rightTicks;\n\n  return { leftRatio, rightRatio };\n}\n\nexport { getRatios };\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function ticks(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    let r0 = Math.round(start / step), r1 = Math.round(stop / step);\n    if (r0 * step < start) ++r0;\n    if (r1 * step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) * step;\n  } else {\n    step = -step;\n    let r0 = Math.round(start * step), r1 = Math.round(stop * step);\n    if (r0 / step < start) ++r0;\n    if (r1 / step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending.js\";\n\nexport default function bisector(f) {\n  let delta = f;\n  let compare1 = f;\n  let compare2 = f;\n\n  if (f.length !== 2) {\n    delta = (d, x) => f(d) - x;\n    compare1 = ascending;\n    compare2 = (d, x) => ascending(f(d), x);\n  }\n\n  function left(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function right(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function center(a, x, lo = 0, hi = a.length) {\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n","export default function number(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis.js\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default x => () => x;\n","import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number.js\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n","export default function constants(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function number(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","//   Copyright (c) 2011 Gary Court\n\n//   Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\n//   The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n//   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport default function murmurhash3_32_gc(key: any, seed?: any) {\n  let remainder;\n  let bytes;\n  let h1;\n  let h1b;\n  let c1;\n  let c1b;\n  let c2;\n  let c2b;\n  let k1;\n  let i;\n\n  remainder = key.length & 3; // key.length % 4\n  bytes = key.length - remainder;\n  h1 = seed;\n  c1 = 0xcc9e2d51;\n  c2 = 0x1b873593;\n  i = 0;\n\n  while (i < bytes) {\n    k1 =\n      (key.charCodeAt(i) & 0xff) |\n      ((key.charCodeAt(++i) & 0xff) << 8) |\n      ((key.charCodeAt(++i) & 0xff) << 16) |\n      ((key.charCodeAt(++i) & 0xff) << 24);\n    ++i;\n\n    k1 =\n      ((k1 & 0xffff) * c1 + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n    k1 = (k1 << 15) | (k1 >>> 17);\n    k1 =\n      ((k1 & 0xffff) * c2 + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n\n    h1 ^= k1;\n    h1 = (h1 << 13) | (h1 >>> 19);\n    h1b =\n      ((h1 & 0xffff) * 5 + ((((h1 >>> 16) * 5) & 0xffff) << 16)) & 0xffffffff;\n    h1 = (h1b & 0xffff) + 0x6b64 + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16);\n  }\n\n  k1 = 0;\n\n  switch (remainder) {\n    case 3:\n      k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n    case 2:\n      k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n    case 1:\n      k1 ^= key.charCodeAt(i) & 0xff;\n\n      k1 =\n        ((k1 & 0xffff) * c1 + ((((k1 >>> 16) * c1) & 0xffff) << 16)) &\n        0xffffffff;\n      k1 = (k1 << 15) | (k1 >>> 17);\n      k1 =\n        ((k1 & 0xffff) * c2 + ((((k1 >>> 16) * c2) & 0xffff) << 16)) &\n        0xffffffff;\n      h1 ^= k1;\n  }\n\n  h1 ^= key.length;\n\n  h1 ^= h1 >>> 16;\n  h1 =\n    ((h1 & 0xffff) * 0x85ebca6b +\n      ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) &\n    0xffffffff;\n  h1 ^= h1 >>> 13;\n  h1 =\n    ((h1 & 0xffff) * 0xc2b2ae35 +\n      ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16)) &\n    0xffffffff;\n  h1 ^= h1 >>> 16;\n\n  return h1 >>> 0;\n}\n","/* eslint-disable camelcase */\nimport Color from 'color';\nimport { scaleLinear } from 'd3-scale';\nimport murmurhash3_32_gc from '../../../util/murmur3';\nimport type { FlamegraphPalette } from './colorPalette';\n\nexport const defaultColor = Color.rgb(148, 142, 142);\nexport const diffColorRed = Color.rgb(200, 0, 0);\nexport const diffColorGreen = Color.rgb(0, 170, 0);\n\nexport const highlightColor = Color('#48CE73');\n\nexport function colorBasedOnDiffPercent(\n  palette: FlamegraphPalette,\n  leftPercent: number,\n  rightPercent: number\n) {\n  const result = diffPercent(leftPercent, rightPercent);\n  const color = NewDiffColor(palette);\n  return color(result);\n}\n\n// TODO move to a different file\n// difference between 2 percents\nexport function diffPercent(leftPercent: number, rightPercent: number) {\n  if (leftPercent === rightPercent) {\n    return 0;\n  }\n\n  if (leftPercent === 0) {\n    return 100;\n  }\n\n  // https://en.wikipedia.org/wiki/Relative_change_and_difference\n  const result = ((rightPercent - leftPercent) / leftPercent) * 100;\n\n  if (result > 100) {\n    return 100;\n  }\n  if (result < -100) {\n    return -100;\n  }\n\n  return result;\n}\n\nexport function colorFromPercentage(p: number, alpha: number) {\n  // calculated by drawing a line (https://en.wikipedia.org/wiki/Line_drawing_algorithm)\n  // where p1 = (0, 180) and p2 = (100, 0)\n  // where x is the absolute percentage\n  // and y is the color variation\n  let v = 180 - 1.8 * Math.abs(p);\n\n  if (v > 200) {\n    v = 200;\n  }\n\n  // red\n  if (p > 0) {\n    return Color.rgb(200, v, v).alpha(alpha);\n  }\n  // green\n  if (p < 0) {\n    return Color.rgb(v, 200, v).alpha(alpha);\n  }\n  // grey\n  return Color.rgb(200, 200, 200).alpha(alpha);\n}\n\nexport function colorGreyscale(v: number, a: number) {\n  return Color.rgb(v, v, v).alpha(a);\n}\n\n// TODO spy names?\nexport function getPackageNameFromStackTrace(\n  spyName: string,\n  stackTrace: string\n) {\n  // TODO: actually make sure these make sense and add tests\n  const regexpLookup = {\n    dotnetspy: /^(?<packageName>.+)\\.(.+)\\.(.+)\\(.*\\)$/,\n    // we don't have enough information\n    default: /^(?<packageName>.+)$/,\n    // TODO: come up with a clever heuristic\n    ebpfspy: /^(?<packageName>.+)$/,\n    // tested with pyroscope stacktraces here: https://regex101.com/r/99KReq/1\n    gospy: /^(?<packageName>.*?\\/.*?\\.|.*?\\.|.+)(?<functionName>.*)$/,\n    phpspy: /^(?<packageName>(.*\\/)*)(?<filename>.*\\.php+)(?<line_info>.*)$/,\n    pyspy: /^(?<packageName>(.*\\/)*)(?<filename>.*\\.py+)(?<line_info>.*)$/,\n    rbspy: /^(?<packageName>(.*\\/)*)(?<filename>.*\\.rb+)(?<line_info>.*)$/,\n    'pyroscope-rs': /^(?<packageName>[^::]+)/,\n    //    'pyroscope-rs': /^(?<packageName>[a-zA-Z0-9]+)(::)?/,\n  };\n\n  if (stackTrace.length === 0) {\n    return stackTrace;\n  }\n\n  const regexp = (regexpLookup as any)[spyName] || regexpLookup.default;\n  const fullStackGroups = stackTrace.match(regexp);\n  if (fullStackGroups && fullStackGroups.groups) {\n    return fullStackGroups.groups.packageName;\n  }\n  return stackTrace;\n}\n\nexport function colorBasedOnPackageName(\n  palette: FlamegraphPalette,\n  name: string\n) {\n  const hash = murmurhash3_32_gc(name);\n  const colorIndex = hash % palette.colors.length;\n  const baseClr = palette.colors[colorIndex];\n\n  return baseClr;\n}\n\n/**\n * NewDiffColor constructs a function that given a number from -100 to 100\n * it returns the color for that number in a linear scale\n * encoded in rgb\n */\nexport function NewDiffColor(\n  props: Omit<FlamegraphPalette, 'colors'>\n): (n: number) => Color {\n  const { goodColor, neutralColor, badColor } = props;\n\n  const color = scaleLinear()\n    .domain([-100, 0, 100])\n    // TODO types from DefinitelyTyped seem to mismatch\n    .range([\n      goodColor.rgb().toString(),\n      neutralColor.rgb().toString(),\n      badColor.rgb().toString(),\n    ] as any);\n\n  return (n: number) => {\n    // convert to our Color object\n    // since that's what users are expecting to use\n    return Color(color(n).toString());\n  };\n}\n","/*\n\nThis component is based on code from flamebearer project\n  https://github.com/mapbox/flamebearer\n\nISC License\n\nCopyright (c) 2018, Mapbox\n\nPermission to use, copy, modify, and/or distribute this software for any purpose\nwith or without fee is hereby granted, provided that the above copyright notice\nand this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\nOF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\nTORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\nTHIS SOFTWARE.\n\n*/\n\n/* eslint-disable no-continue */\nimport { Flamebearer, addTicks } from '../../../models/flamebearer';\nimport {\n  PX_PER_LEVEL,\n  COLLAPSE_THRESHOLD,\n  LABEL_THRESHOLD,\n  BAR_HEIGHT,\n  GAP,\n} from './constants';\nimport {\n  formatPercent,\n  getFormatter,\n  ratioToPercent,\n} from '../../../util/format';\nimport { fitToCanvasRect } from '../../../util/fitMode';\nimport { getRatios } from './utils';\nimport { createFF } from '../../../util/flamebearer';\nimport {\n  colorBasedOnDiffPercent,\n  colorBasedOnPackageName,\n  colorGreyscale,\n  getPackageNameFromStackTrace,\n  highlightColor,\n} from './color';\nimport type { FlamegraphPalette } from './colorPalette';\n// there's a dependency cycle here but it should be fine\n/* eslint-disable-next-line import/no-cycle */\nimport Flamegraph from './Flamegraph';\n\ntype CanvasRendererConfig = Flamebearer & {\n  canvas: HTMLCanvasElement;\n  focusedNode: ConstructorParameters<typeof Flamegraph>[2];\n  fitMode: ConstructorParameters<typeof Flamegraph>[3];\n  highlightQuery: ConstructorParameters<typeof Flamegraph>[4];\n  zoom: ConstructorParameters<typeof Flamegraph>[5];\n\n  /**\n   * Used when zooming, values between 0 and 1.\n   * For illustration, in a non zoomed state it has the value of 0\n   */\n  readonly rangeMin: number;\n  /**\n   * Used when zooming, values between 0 and 1.\n   * For illustration, in a non zoomed state it has the value of 1\n   */\n  readonly rangeMax: number;\n\n  tickToX: (i: number) => number;\n\n  pxPerTick: number;\n\n  palette: FlamegraphPalette;\n};\n\nexport default function RenderCanvas(props: CanvasRendererConfig) {\n  const { canvas, fitMode, units, tickToX, levels, palette } = props;\n  const { numTicks, sampleRate, pxPerTick } = props;\n  const { rangeMin, rangeMax } = props;\n  const { focusedNode, zoom } = props;\n\n  const graphWidth = getCanvasWidth(canvas);\n  // TODO: why is this needed? otherwise height is all messed up\n  canvas.width = graphWidth;\n\n  if (rangeMin >= rangeMax) {\n    throw new Error(`'rangeMin' should be strictly smaller than 'rangeMax'`);\n  }\n\n  const { format } = props;\n  const ff = createFF(format);\n\n  //  const pxPerTick = graphWidth / numTicks / (rangeMax - rangeMin);\n  const ctx = canvas.getContext('2d');\n  if (!ctx) {\n    throw new Error('Missing context');\n  }\n\n  const selectedLevel = zoom.mapOrElse(\n    () => 0,\n    (z) => z.i\n  );\n  const formatter = getFormatter(numTicks, sampleRate, units);\n  const isFocused = focusedNode.isJust;\n  const topLevel = focusedNode.mapOrElse(\n    () => 0,\n    (f) => f.i\n  );\n\n  const canvasHeight =\n    PX_PER_LEVEL * (levels.length - topLevel) + (isFocused ? BAR_HEIGHT : 0);\n  //  const canvasHeight = PX_PER_LEVEL * (levels.length - topLevel);\n  canvas.height = canvasHeight;\n\n  // increase pixel ratio, otherwise it looks bad in high resolution devices\n  if (typeof window !== 'undefined') {\n    if (window.devicePixelRatio > 1) {\n      canvas.width *= 2;\n      canvas.height *= 2;\n      ctx.scale(2, 2);\n    }\n  }\n\n  const { names } = props;\n  // are we focused?\n  // if so, add an initial bar telling it's a collapsed one\n  // TODO clean this up\n  if (isFocused) {\n    const width = numTicks * pxPerTick;\n    ctx.beginPath();\n    ctx.rect(0, 0, numTicks * pxPerTick, BAR_HEIGHT);\n    // TODO find a neutral color\n    // TODO use getColor ?\n    ctx.fillStyle = colorGreyscale(200, 1).rgb().string();\n    ctx.fill();\n\n    // TODO show the samples too?\n    const shortName = focusedNode.mapOrElse(\n      () => 'total',\n      (f) => `total (${f.i - 1} level(s) collapsed)`\n    );\n\n    // Set the font syle\n    // It's important to set the font BEFORE calculating 'characterSize'\n    // Since it will be used to calculate how many characters can fit\n    ctx.textBaseline = 'middle';\n    ctx.font =\n      '400 11.5px SFMono-Regular, Consolas, Liberation Mono, Menlo, monospace';\n    // Since this is a monospaced font any character would do\n    const characterSize = ctx.measureText('a').width;\n    const fitCalc = fitToCanvasRect({\n      mode: fitMode,\n      charSize: characterSize,\n      rectWidth: width,\n      fullText: shortName,\n      shortText: shortName,\n    });\n\n    const x = 0;\n    const y = 0;\n    const sh = BAR_HEIGHT;\n\n    ctx.save();\n    ctx.clip();\n    ctx.fillStyle = 'black';\n    const namePosX = Math.round(Math.max(x, 0));\n    ctx.fillText(fitCalc.text, namePosX + fitCalc.marginLeft, y + sh / 2 + 1);\n    ctx.restore();\n  }\n\n  for (let i = 0; i < levels.length - topLevel; i += 1) {\n    const level = levels[topLevel + i];\n    for (let j = 0; j < level.length; j += ff.jStep) {\n      const name = getFunctionName(names, j, format, level);\n      const barIndex = ff.getBarOffset(level, j);\n      const x = tickToX(barIndex);\n      const y = i * PX_PER_LEVEL + (isFocused ? BAR_HEIGHT : 0);\n\n      const sh = BAR_HEIGHT;\n\n      const highlightModeOn =\n        !!props.highlightQuery && props.highlightQuery.length > 0;\n\n      const isHighlighted = nodeIsInQuery(\n        j + ff.jName,\n        level,\n        names,\n        props.highlightQuery\n      );\n\n      let numBarTicks = ff.getBarTotal(level, j);\n\n      // merge very small blocks into big \"collapsed\" ones for performance\n      const collapsed = numBarTicks * pxPerTick <= COLLAPSE_THRESHOLD;\n      if (collapsed) {\n        // TODO: refactor this\n        while (\n          j < level.length - ff.jStep &&\n          barIndex + numBarTicks === ff.getBarOffset(level, j + ff.jStep) &&\n          ff.getBarTotal(level, j + ff.jStep) * pxPerTick <=\n            COLLAPSE_THRESHOLD &&\n          isHighlighted ===\n            ((props.highlightQuery &&\n              nodeIsInQuery(\n                j + ff.jStep + ff.jName,\n                level,\n                names,\n                props.highlightQuery\n              )) ||\n              false)\n        ) {\n          j += ff.jStep;\n          numBarTicks += ff.getBarTotal(level, j);\n        }\n      }\n\n      const sw = numBarTicks * pxPerTick - (collapsed ? 0 : GAP);\n      /*******************************/\n      /*      D r a w   R e c t      */\n      /*******************************/\n      const { spyName } = props;\n      const color =\n        format === 'single'\n          ? getColor({\n              format,\n              level,\n              j,\n              // discount for the levels we skipped\n              // otherwise it will dim out all nodes\n              i:\n                i +\n                focusedNode.mapOrElse(\n                  () => 0,\n                  (f) => f.i\n                ),\n              names,\n              collapsed,\n              selectedLevel,\n              highlightModeOn,\n              isHighlighted,\n              spyName,\n              palette,\n            })\n          : getColorDouble({\n              format: 'double',\n              level,\n              j,\n              // discount for the levels we skipped\n              // otherwise it will dim out all nodes\n              i:\n                i +\n                focusedNode.mapOrElse(\n                  () => 0,\n                  (f) => f.i\n                ),\n              //        i: i + (isFocused ? focusedNode.i : 0),\n              names,\n              collapsed,\n              selectedLevel,\n              highlightModeOn,\n              isHighlighted,\n              spyName,\n              palette,\n              leftTicks: props.leftTicks,\n              rightTicks: props.rightTicks,\n            });\n\n      ctx.beginPath();\n      ctx.rect(x, y, sw, sh);\n      ctx.fillStyle = color.string();\n      ctx.fill();\n\n      /*******************************/\n      /*      D r a w   T e x t      */\n      /*******************************/\n      // don't write text if there's not enough space for a single letter\n      if (collapsed) {\n        continue;\n      }\n\n      if (sw < LABEL_THRESHOLD) {\n        continue;\n      }\n\n      const shortName = getFunctionName(names, j, format, level);\n      const longName = getLongName(\n        shortName,\n        numBarTicks,\n        numTicks,\n        sampleRate,\n        formatter\n      );\n\n      // Set the font syle\n      // It's important to set the font BEFORE calculating 'characterSize'\n      // Since it will be used to calculate how many characters can fit\n      ctx.textBaseline = 'middle';\n      ctx.font =\n        '400 11.5px SFMono-Regular, Consolas, Liberation Mono, Menlo, monospace';\n      // Since this is a monospaced font any character would do\n      const characterSize = ctx.measureText('a').width;\n      const fitCalc = fitToCanvasRect({\n        mode: fitMode,\n        charSize: characterSize,\n        rectWidth: sw,\n        fullText: longName,\n        shortText: shortName,\n      });\n\n      ctx.save();\n      ctx.clip();\n      ctx.fillStyle = 'black';\n      const namePosX = Math.round(Math.max(x, 0));\n      ctx.fillText(fitCalc.text, namePosX + fitCalc.marginLeft, y + sh / 2 + 1);\n      ctx.restore();\n    }\n  }\n}\n\nfunction getFunctionName(\n  names: CanvasRendererConfig['names'],\n  j: number,\n  format: CanvasRendererConfig['format'],\n  level: number[]\n) {\n  const ff = createFF(format);\n  const shortName = names[level[j + ff.jName]];\n  return shortName;\n}\n\nfunction getLongName(\n  shortName: string,\n  numBarTicks: number,\n  numTicks: number,\n  sampleRate: number,\n  formatter: ReturnType<typeof getFormatter>\n) {\n  const ratio = numBarTicks / numTicks;\n  const percent = formatPercent(ratio);\n\n  const longName = `${shortName} (${percent}, ${formatter.format(\n    numBarTicks,\n    sampleRate\n  )})`;\n\n  return longName;\n}\n\ntype getColorCfg = {\n  collapsed: boolean;\n  level: number[];\n  j: number;\n  selectedLevel: number;\n  i: number;\n  highlightModeOn: boolean;\n  isHighlighted: boolean;\n  names: string[];\n  spyName: string;\n  palette: FlamegraphPalette;\n  format: 'single';\n};\n\nfunction getColor(cfg: getColorCfg) {\n  const ff = createFF(cfg.format);\n\n  // all above selected level should be dimmed\n  const a = cfg.selectedLevel > cfg.i ? 0.33 : 1;\n\n  // Collapsed\n  if (cfg.collapsed) {\n    return colorGreyscale(200, 0.66);\n  }\n\n  // We are in a search\n  if (cfg.highlightModeOn) {\n    if (!cfg.isHighlighted) {\n      return colorGreyscale(200, 0.66);\n    }\n    // it's a highlighted node, so color it as normally\n  }\n\n  // Diff mode\n  //  if (cfg.format === 'double') {\n  //    const { leftRatio, rightRatio } = getRatios(\n  //      cfg.format,\n  //      cfg.level,\n  //      cfg.j,\n  //      cfg.leftTicks,\n  //      cfg.rightTicks\n  //    );\n  //\n  //    const leftPercent = ratioToPercent(leftRatio);\n  //    const rightPercent = ratioToPercent(rightRatio);\n  //\n  //    return colorBasedOnDiffPercent(\n  //      cfg.palette,\n  //      leftPercent,\n  //      rightPercent\n  //    ).alpha(a);\n  //  }\n\n  return colorBasedOnPackageName(\n    cfg.palette,\n    getPackageNameFromStackTrace(\n      cfg.spyName,\n      cfg.names[cfg.level[cfg.j + ff.jName]]\n    )\n  ).alpha(a);\n}\n\nfunction getColorDouble(cfg: {\n  collapsed: boolean;\n  level: number[];\n  j: number;\n  selectedLevel: number;\n  i: number;\n  highlightModeOn: boolean;\n  isHighlighted: boolean;\n  names: string[];\n  spyName: string;\n  palette: FlamegraphPalette;\n  format: 'double';\n  leftTicks: number;\n  rightTicks: number;\n}) {\n  // all above selected level should be dimmed\n  const a = cfg.selectedLevel > cfg.i ? 0.33 : 1;\n\n  const { leftRatio, rightRatio } = getRatios(\n    cfg.format,\n    cfg.level,\n    cfg.j,\n    cfg.leftTicks,\n    cfg.rightTicks\n  );\n\n  const leftPercent = ratioToPercent(leftRatio);\n  const rightPercent = ratioToPercent(rightRatio);\n\n  return colorBasedOnDiffPercent(cfg.palette, leftPercent, rightPercent).alpha(\n    a\n  );\n}\n\nfunction nodeIsInQuery(\n  index: number,\n  level: number[],\n  names: string[],\n  query: string\n) {\n  return names[level[index]].indexOf(query) >= 0;\n}\n\nfunction getCanvasWidth(canvas: HTMLCanvasElement) {\n  // clientWidth includes padding\n  // however it's not present in node-canvas (used for testing)\n  // so we also fallback to canvas.width\n  return canvas.clientWidth || canvas.width;\n}\n","import { DeepReadonly } from 'ts-essentials';\nimport { Maybe } from '../../../util/fp';\nimport { PX_PER_LEVEL, BAR_HEIGHT, COLLAPSE_THRESHOLD } from './constants';\nimport { FlamegraphPalette } from './colorPalette';\nimport { createFF } from '../../../util/flamebearer';\nimport { Flamebearer } from '../../../models/flamebearer';\n// there's a dependency cycle here but it should be fine\n/* eslint-disable-next-line import/no-cycle */\nimport RenderCanvas from './Flamegraph_render';\n\n/* eslint-disable no-useless-constructor */\n\n/*\n * Branded Type to distinguish between x,y that were validated to be within bounds or not.\n */\ntype XYWithinBounds = { x: number; y: number } & { __brand: 'XYWithinBounds' };\n\nexport default class Flamegraph {\n  private ff: ReturnType<typeof createFF>;\n\n  constructor(\n    private readonly flamebearer: Flamebearer,\n    private canvas: HTMLCanvasElement,\n    /**\n     * What node to be 'focused'\n     * ie what node to start the tree\n     */\n    private focusedNode: Maybe<DeepReadonly<{ i: number; j: number }>>,\n    /**\n     * What level has been \"selected\"\n     * All nodes above will be dimmed out\n     */\n    //    private selectedLevel: number,\n    private readonly fitMode: 'HEAD' | 'TAIL',\n    /**\n     * The query used to match against the node name.\n     * For each node,\n     * if it matches it will be highlighted,\n     * otherwise it will be greyish.\n     */\n    private readonly highlightQuery: string,\n    private zoom: Maybe<DeepReadonly<{ i: number; j: number }>>,\n\n    private palette: FlamegraphPalette\n  ) {\n    // TODO\n    // these were only added because storybook is not setting\n    // the property to the component\n    this.zoom = zoom;\n    this.focusedNode = focusedNode;\n    this.flamebearer = flamebearer;\n    this.canvas = canvas;\n    this.highlightQuery = highlightQuery;\n    this.ff = createFF(flamebearer.format);\n\n    // don't allow to have a zoom smaller than the focus\n    // since it does not make sense\n    if (focusedNode.isJust && zoom.isJust) {\n      if (zoom.value.i < focusedNode.value.i) {\n        throw new Error('Zoom i level should be bigger than Focus');\n      }\n    }\n  }\n\n  public render() {\n    const { rangeMin, rangeMax } = this.getRange();\n\n    const props = {\n      canvas: this.canvas,\n\n      format: this.flamebearer.format,\n      numTicks: this.flamebearer.numTicks,\n      sampleRate: this.flamebearer.sampleRate,\n      names: this.flamebearer.names,\n      levels: this.flamebearer.levels,\n      spyName: this.flamebearer.spyName,\n      units: this.flamebearer.units,\n\n      rangeMin,\n      rangeMax,\n      fitMode: this.fitMode,\n      highlightQuery: this.highlightQuery,\n      zoom: this.zoom,\n      focusedNode: this.focusedNode,\n      pxPerTick: this.pxPerTick(),\n      tickToX: this.tickToX,\n      palette: this.palette,\n    };\n\n    const { format: viewType } = this.flamebearer;\n\n    switch (viewType) {\n      case 'single': {\n        RenderCanvas({ ...props, format: 'single' });\n        break;\n      }\n      case 'double': {\n        RenderCanvas({\n          ...props,\n          leftTicks: this.flamebearer.leftTicks,\n          rightTicks: this.flamebearer.rightTicks,\n        });\n        break;\n      }\n      default: {\n        throw new Error(`Invalid format: '${viewType}'`);\n      }\n    }\n  }\n\n  private pxPerTick() {\n    const { rangeMin, rangeMax } = this.getRange();\n    //    const graphWidth = this.canvas.width;\n    const graphWidth = this.getCanvasWidth();\n\n    return graphWidth / this.flamebearer.numTicks / (rangeMax - rangeMin);\n  }\n\n  private tickToX = (i: number) => {\n    const { rangeMin } = this.getRange();\n    return (i - this.flamebearer.numTicks * rangeMin) * this.pxPerTick();\n  };\n\n  private getRange() {\n    const { ff } = this;\n\n    // delay calculation since they may not be set\n    const calculatedZoomRange = (zoom: { i: number; j: number }) => {\n      const zoomMin =\n        ff.getBarOffset(this.flamebearer.levels[zoom.i], zoom.j) /\n        this.flamebearer.numTicks;\n      const zoomMax =\n        (ff.getBarOffset(this.flamebearer.levels[zoom.i], zoom.j) +\n          ff.getBarTotal(this.flamebearer.levels[zoom.i], zoom.j)) /\n        this.flamebearer.numTicks;\n\n      return {\n        rangeMin: zoomMin,\n        rangeMax: zoomMax,\n      };\n    };\n\n    const calculatedFocusRange = (focusedNode: { i: number; j: number }) => {\n      const focusMin =\n        ff.getBarOffset(this.flamebearer.levels[focusedNode.i], focusedNode.j) /\n        this.flamebearer.numTicks;\n      const focusMax =\n        (ff.getBarOffset(\n          this.flamebearer.levels[focusedNode.i],\n          focusedNode.j\n        ) +\n          ff.getBarTotal(\n            this.flamebearer.levels[focusedNode.i],\n            focusedNode.j\n          )) /\n        this.flamebearer.numTicks;\n\n      return {\n        rangeMin: focusMin,\n        rangeMax: focusMax,\n      };\n    };\n\n    const { zoom, focusedNode } = this;\n\n    return zoom.match({\n      Just: (z) => {\n        return focusedNode.match({\n          // both are set\n          Just: (f) => {\n            const fRange = calculatedFocusRange(f);\n            const zRange = calculatedZoomRange(z);\n\n            // focus is smaller, let's use it\n            if (\n              fRange.rangeMax - fRange.rangeMin <\n              zRange.rangeMax - zRange.rangeMin\n            ) {\n              console.warn(\n                'Focus is smaller than range, this shouldnt happen. Verify that the zoom is always bigger than the focus.'\n              );\n              return calculatedFocusRange(f);\n            }\n\n            return calculatedZoomRange(z);\n          },\n\n          // only zoom is set\n          Nothing: () => {\n            return calculatedZoomRange(z);\n          },\n        });\n      },\n\n      Nothing: () => {\n        return focusedNode.match({\n          Just: (f) => {\n            // only focus is set\n            return calculatedFocusRange(f);\n          },\n          Nothing: () => {\n            // neither are set\n            return {\n              rangeMin: 0,\n              rangeMax: 1,\n            };\n          },\n        });\n      },\n    });\n  }\n\n  private getCanvasWidth() {\n    // bit of a hack, but clientWidth is not available in node-canvas\n    return this.canvas.clientWidth || this.canvas.width;\n  }\n\n  private isFocused() {\n    return this.focusedNode.isJust;\n  }\n\n  // binary search of a block in a stack level\n  // TODO(eh-am): calculations seem wrong when x is 0 and y != 0,\n  // also on the border\n  private binarySearchLevel(x: number, level: number[]) {\n    const { ff } = this;\n\n    let i = 0;\n    let j = level.length - ff.jStep;\n\n    while (i <= j) {\n      /* eslint-disable-next-line no-bitwise */\n      const m = ff.jStep * ((i / ff.jStep + j / ff.jStep) >> 1);\n      const x0 = this.tickToX(ff.getBarOffset(level, m));\n      const x1 = this.tickToX(\n        ff.getBarOffset(level, m) + ff.getBarTotal(level, m)\n      );\n\n      if (x0 <= x && x1 >= x) {\n        return x1 - x0 > COLLAPSE_THRESHOLD ? m : -1;\n      }\n      if (x0 > x) {\n        j = m - ff.jStep;\n      } else {\n        i = m + ff.jStep;\n      }\n    }\n    return -1;\n  }\n\n  private xyToBarIndex(x: number, y: number) {\n    if (x < 0 || y < 0) {\n      throw new Error(`x and y must be bigger than 0. x = ${x}, y = ${y}`);\n    }\n\n    // clicked on the top bar and it's focused\n    if (this.isFocused() && y <= BAR_HEIGHT) {\n      return { i: 0, j: 0 };\n    }\n\n    // in focused mode there's a \"fake\" bar at the top\n    // so we must discount for it\n    const computedY = this.isFocused() ? y - BAR_HEIGHT : y;\n\n    const compensatedFocusedY = this.focusedNode.mapOrElse(\n      () => 0,\n      (node) => {\n        return node.i <= 0 ? 0 : node.i;\n      }\n    );\n\n    const compensation = this.zoom.match({\n      Just: () => {\n        return this.focusedNode.match({\n          Just: () => {\n            // both are set, prefer focus\n            return compensatedFocusedY;\n          },\n\n          Nothing: () => {\n            // only zoom is set\n            return 0;\n          },\n        });\n      },\n\n      Nothing: () => {\n        return this.focusedNode.match({\n          Just: () => {\n            // only focus is set\n            return compensatedFocusedY;\n          },\n\n          Nothing: () => {\n            // none of them are set\n            return 0;\n          },\n        });\n      },\n    });\n\n    const i = Math.floor(computedY / PX_PER_LEVEL) + compensation;\n\n    if (i >= 0 && i < this.flamebearer.levels.length) {\n      const j = this.binarySearchLevel(x, this.flamebearer.levels[i]);\n\n      return { i, j };\n    }\n\n    return { i: 0, j: 0 };\n  }\n\n  private parseXY(x: number, y: number) {\n    const withinBounds = this.isWithinBounds(x, y);\n\n    const v = { x, y } as XYWithinBounds;\n\n    if (withinBounds) {\n      return Maybe.of(v);\n    }\n\n    return Maybe.nothing<typeof v>();\n  }\n\n  private xyToBarPosition = (xy: XYWithinBounds) => {\n    const { ff } = this;\n    const { i, j } = this.xyToBarIndex(xy.x, xy.y);\n\n    const topLevel = this.focusedNode.mapOrElse(\n      () => 0,\n      (node) => (node.i < 0 ? 0 : node.i - 1)\n    );\n\n    const level = this.flamebearer.levels[i];\n    const posX = Math.max(this.tickToX(ff.getBarOffset(level, j)), 0);\n\n    // lower bound is 0\n    const posY = Math.max((i - topLevel) * PX_PER_LEVEL, 0);\n\n    const sw = Math.min(\n      this.tickToX(ff.getBarOffset(level, j) + ff.getBarTotal(level, j)) - posX,\n      this.getCanvasWidth()\n    );\n\n    return {\n      x: posX,\n      y: posY,\n      width: sw,\n    };\n  };\n\n  private xyToBarData = (xy: XYWithinBounds) => {\n    const { i, j } = this.xyToBarIndex(xy.x, xy.y);\n    const level = this.flamebearer.levels[i];\n\n    const { ff } = this;\n\n    switch (this.flamebearer.format) {\n      case 'single': {\n        return {\n          format: 'single' as const,\n          name: this.flamebearer.names[ff.getBarName(level, j)],\n          self: ff.getBarSelf(level, j),\n          offset: ff.getBarOffset(level, j),\n          total: ff.getBarTotal(level, j),\n        };\n      }\n      case 'double': {\n        if (!ff.getBarTotalLeft || !ff.getBarTotalRght) {\n          throw new Error('Missing ff.getBarTotalLeft and ff.getBarTotalRght');\n        }\n\n        return {\n          format: 'double' as const,\n          barTotal: ff.getBarTotal(level, j),\n          totalLeft: ff.getBarTotalLeft(level, j),\n          totalRight: ff.getBarTotalRght(level, j),\n          totalDiff: ff.getBarTotalDiff(level, j),\n          name: this.flamebearer.names[ff.getBarName(level, j)],\n        };\n      }\n\n      default: {\n        throw new Error(`Unsupported type`);\n      }\n    }\n  };\n\n  public isWithinBounds = (x: number, y: number) => {\n    if (x < 0 || x > this.getCanvasWidth()) {\n      return false;\n    }\n\n    try {\n      const { i, j } = this.xyToBarIndex(x, y);\n      if (j === -1 || i === -1) {\n        return false;\n      }\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /*\n   * Given x and y coordinates\n   * return all information about the bar under those coordinates\n   */\n  public xyToBar(x: number, y: number) {\n    return this.parseXY(x, y).map((xyWithinBounds) => {\n      const { i, j } = this.xyToBarIndex(x, y);\n      const position = this.xyToBarPosition(xyWithinBounds);\n      const data = this.xyToBarData(xyWithinBounds);\n\n      return {\n        i,\n        j,\n        ...position,\n        ...data,\n      };\n    });\n  }\n}\n","import Color from 'color';\n\n// FlamegraphPalette represents\nexport interface FlamegraphPalette {\n  name: string;\n  goodColor: Color;\n  neutralColor: Color;\n  badColor: Color;\n\n  colors: Color[];\n}\n\nexport const DefaultPalette: FlamegraphPalette = {\n  name: 'Default',\n  // green\n  goodColor: Color.rgb(0, 170, 0),\n  // grey\n  neutralColor: Color.rgb(148, 142, 142),\n  // red\n  badColor: Color.rgb(200, 0, 0),\n\n  colors: [\n    Color.hsl(24, 69, 60),\n    Color.hsl(34, 65, 65),\n    Color.hsl(194, 52, 61),\n    Color.hsl(163, 45, 55),\n    Color.hsl(211, 48, 60),\n    Color.hsl(246, 40, 65),\n    Color.hsl(305, 63, 79),\n    Color.hsl(47, 100, 73),\n\n    Color.rgb(183, 219, 171),\n    Color.rgb(244, 213, 152),\n    Color.rgb(112, 219, 237),\n    Color.rgb(249, 186, 143),\n    Color.rgb(242, 145, 145),\n    Color.rgb(130, 181, 216),\n    Color.rgb(229, 168, 226),\n    Color.rgb(174, 162, 224),\n    Color.rgb(154, 196, 138),\n    Color.rgb(242, 201, 109),\n    Color.rgb(101, 197, 219),\n    Color.rgb(249, 147, 78),\n    Color.rgb(234, 100, 96),\n    Color.rgb(81, 149, 206),\n    Color.rgb(214, 131, 206),\n    Color.rgb(128, 110, 183),\n  ],\n};\n\nexport const ColorBlindPalette: FlamegraphPalette = {\n  ...DefaultPalette,\n\n  name: 'Color Blind',\n  goodColor: Color.rgb(26, 133, 255),\n  neutralColor: Color.rgb(148, 142, 142),\n  badColor: Color.rgb(220, 50, 32),\n};\n"],"sourceRoot":""}