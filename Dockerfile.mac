#                     _
#                    | |
#   __ _ ___ ___  ___| |_ ___
#  / _` / __/ __|/ _ \ __/ __|
# | (_| \__ \__ \  __/ |_\__ \
#  \__,_|___/___/\___|\__|___/

FROM node:16.18-alpine3.16 as js-builder

RUN apk update && apk upgrade && \
    apk add --no-cache make

WORKDIR /opt/pyroscope

COPY scripts ./scripts
COPY package.json yarn.lock Makefile lerna.json ./
COPY lib ./lib
COPY packages ./packages
COPY babel.config.js .eslintrc.js .eslintignore .prettierrc tsconfig.json ./
COPY webapp ./webapp

RUN make install-build-web-dependencies

ARG EXTRA_METADATA=""

RUN EXTRA_METADATA=$EXTRA_METADATA make assets-release


#   __ _             _   _
#  / _(_)           | | (_)
# | |_ _ _ __   __ _| |  _ _ __ ___   __ _  __ _  ___
# |  _| | '_ \ / _` | | | | '_ ` _ \ / _` |/ _` |/ _ \
# | | | | | | | (_| | | | | | | | | | (_| | (_| |  __/
# |_| |_|_| |_|\__,_|_| |_|_| |_| |_|\__,_|\__, |\___|
#                                           __/ |
#                                          |___/

FROM --platform=$BUILDPLATFORM crazymax/osxcross:11.3 AS osxcross
FROM ubuntu:22.04 AS go-builder

RUN apt-get update \
    && apt-get -y install clang lld libc6-dev wget \
    && wget https://go.dev/dl/go1.20.1.linux-amd64.tar.gz \
    && tar -C /usr/local -xzf go1.20.1.linux-amd64.tar.gz

WORKDIR /opt/pyroscope/

COPY --from=js-builder /opt/pyroscope/webapp/public ./webapp/public
COPY --from=osxcross /osxcross /osxcross
COPY pkg ./pkg
COPY cmd ./cmd
COPY webapp/assets_embedded.go ./webapp/assets_embedded.go
COPY scripts ./scripts
COPY go.mod go.sum ./

ENV CGO_ENABLED=1
ENV PATH="/osxcross/bin:$PATH"
ENV LD_LIBRARY_PATH="/osxcross/lib:$LD_LIBRARY_PATH"
ENV PATH=$PATH:/usr/local/go/bin
ENV CC=o64-clang
ENV CXX=o64-clang++

RUN GOOS=darwin GOARCH=arm64 \
  HOST=arm64-apple-darwin15 AR=arm64-apple-darwin20.4-ar LD=arm64-apple-darwin20.4-ld \
  go build \
  -trimpath -ldflags "$(scripts/generate-build-flags.sh)" \
  -tags dotnetspy,gospy,embedassets \
  -o /pyroscope-arm64 \
  ./cmd/pyroscope

RUN GOOS=darwin GOARCH=amd64 \
  HOST=amd64-apple-darwin15 AR=x86_64-apple-darwin20.4-ar LD=x86_64-apple-darwin20.4-ld \
  go build \
  -trimpath -ldflags "$(scripts/generate-build-flags.sh)" \
  -tags dotnetspy,gospy,embedassets \
  -o /pyroscope-amd64 \
  ./cmd/pyroscope

FROM scratch AS exporter
COPY --from=go-builder /pyroscope-arm64 /pyroscope-amd64  /
