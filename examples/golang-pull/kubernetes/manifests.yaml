apiVersion: apps/v1
kind: Deployment
metadata:
  name: hotrod-golang
spec:
  selector:
    matchLabels:
      app: hotrod-golang
  template:
    metadata:
      labels:
        app: hotrod-golang
        app.kubernetes.io/name: hotrod-golang
      annotations:
        pyroscope.io/scrape: 'true'
        pyroscope.io/application-name: 'hotrod'
        pyroscope.io/profile-cpu-enabled: 'true'
        pyroscope.io/profile-mem-enabled: 'true'
        pyroscope.io/port: '6060'
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
        - name: hotrod-golang
          image: public.ecr.aws/pyroscope/hotrod-golang:latest
          args: ['all']
          ports:
            - containerPort: 8080
            - containerPort: 6060
          env:
            - name: JAEGER_AGENT_HOST
              value: jaeger
            - name: JAEGER_AGENT_PORT
              value: '6831'
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 1
              memory: 256Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  labels:
    app: jaeger
    app.kubernetes.io/name: jaeger
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      labels:
        app: jaeger
        app.kubernetes.io/name: jaeger
    spec:
      containers:
        - name: jaeger
          image: jaegertracing/all-in-one:1.1
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 1
              memory: 256Mi
          ports:
            - containerPort: 6831
              protocol: UDP
            - containerPort: 16686
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: hotrod-golang
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: hotrod-golang
  ports:
    - name: frontend
      port: 8080
      targetPort: 8080
      nodePort: 30000

---
apiVersion: v1
kind: Service
metadata:
  name: jaeger
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: jaeger
  ports:
    - name: agent
      port: 16686
      targetPort: 16686
      nodePort: 30001
# spec:
#   type: NodePort
#   selector:
#     app: MyApp
#   ports:
#       # By default and for convenience, the `targetPort` is set to the same value as the `port` field.
#     - port: 80
#       targetPort: 80
#       # Optional field
#       # By default and for convenience, the Kubernetes control plane will allocate a port from a range (default: 30000-32767)
#       nodePort: 30007

# apiVersion: v1
# kind: Service
# metadata:
#   annotations:
#     meta.helm.sh/release-name: demo
#     meta.helm.sh/release-namespace: default
#   creationTimestamp: "2022-02-05T06:43:07Z"
#   labels:
#     app.kubernetes.io/instance: demo
#     app.kubernetes.io/managed-by: Helm
#     app.kubernetes.io/name: pyroscope
#     app.kubernetes.io/version: 0.8.0
#     helm.sh/chart: pyroscope-0.2.31
#   name: demo-pyroscope
#   namespace: default
#   resourceVersion: "831"
#   uid: 14cf6a37-6d3a-44bd-a6db-69851f8164d5
# spec:
#   type: NodePort
#   ipFamilies:
#   - IPv4
#   ipFamilyPolicy: SingleStack
#   ports:
#   - name: http
#     port: 4040
#     protocol: TCP
#     targetPort: api
#     nodePort: 30002
#   selector:
#     app.kubernetes.io/instance: demo
#     app.kubernetes.io/name: pyroscope
#   sessionAffinity: None
# status:
#   loadBalancer: {}
