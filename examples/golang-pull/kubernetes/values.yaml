---
# Create Cluster Role and bind it to Pyroscope to enable it watching Kubernetes resources.
rbac:
  create: true
# Pyroscope configuration.
pyroscopeConfigs:
  log-level: debug
  scrape-configs:
    # Example scrape config for pods
    #
    # The relabeling allows the actual pod scrape endpoint to be configured via the
    # following annotations:
    #
    # * `pyroscope.io/scrape`: Only scrape pods that have a value of `true`.
    # * `pyroscope.io/application-name`: Name of the application being profiled.
    # * `pyroscope.io/scheme`: If the metrics endpoint is secured then you will need
    # to set this to `https` & most likely set the `tls_config` of the scrape config.
    # * `pyroscope.io/port`: Scrape the pod on the indicated port.
    # * `pyroscope.io/profile-{profile_name}-path`: Specifies URL path exposing pprof profile.
    # * `pyroscope.io/profile-{profile_name}-param-{param_key}`: Overrides scrape URL parameters.
    #
    # Kubernetes labels will be added as Pyroscope labels on metrics via the
    # `labelmap` relabeling action.
    - job-name: 'kubernetes-pods'
      enabled-profiles: [cpu, mem]
      kubernetes-sd-configs:
        - role: pod
      relabel-configs:
        # Filter-out only pods eligiable for scraping.
        - source-labels:
            [__meta_kubernetes_pod_annotation_mon_scrape]
          action: keep
          regex: true
        # Figure out the target address.
        - source-labels:
            [__address__, __meta_kubernetes_pod_annotation_mon_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target-label: __address__
        # Take the app name from 'app.kubernetes.io/name' pod label.
        - source-labels: [ __meta_kubernetes_pod_label_app_kubernetes_io_name ]
          action: replace
          target-label: __name__
